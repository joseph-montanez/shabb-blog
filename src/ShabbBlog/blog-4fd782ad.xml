<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wp="http://wordpress.org/export/1.0/">
  <channel>
    <title>Gorilla3D</title>
    <description>Blogs of my work and thoughts</description>
    <link>http://my.opera.com/community/</link>
    <generator>My Opera</generator>
    <wp:wxr_version>1.0</wp:wxr_version>
    <wp:base_site_url>http://my.opera.com/</wp:base_site_url>
    <wp:base_blog_url>http://my.opera.com/sutabi/blog/</wp:base_blog_url>
    <wp:tag><wp:tag_slug>3d</wp:tag_slug><wp:tag_name><![CDATA[3D]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>programming</wp:tag_slug><wp:tag_name><![CDATA[programming]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>development</wp:tag_slug><wp:tag_name><![CDATA[development]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>software</wp:tag_slug><wp:tag_name><![CDATA[software]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>python</wp:tag_slug><wp:tag_name><![CDATA[python]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>php</wp:tag_slug><wp:tag_name><![CDATA[php]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>ajax</wp:tag_slug><wp:tag_name><![CDATA[ajax]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>mysql</wp:tag_slug><wp:tag_name><![CDATA[mysql]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>javascript</wp:tag_slug><wp:tag_name><![CDATA[javascript]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>xhtml</wp:tag_slug><wp:tag_name><![CDATA[xhtml]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>css</wp:tag_slug><wp:tag_name><![CDATA[css]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>web</wp:tag_slug><wp:tag_name><![CDATA[web]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>web20</wp:tag_slug><wp:tag_name><![CDATA[web2.0]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>google-web-anime</wp:tag_slug><wp:tag_name><![CDATA[google web anime]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>google</wp:tag_slug><wp:tag_name><![CDATA[google]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>anime</wp:tag_slug><wp:tag_name><![CDATA[anime]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>html</wp:tag_slug><wp:tag_name><![CDATA[html]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>modeling</wp:tag_slug><wp:tag_name><![CDATA[modeling]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>model</wp:tag_slug><wp:tag_name><![CDATA[model]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>models</wp:tag_slug><wp:tag_name><![CDATA[models]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>coding</wp:tag_slug><wp:tag_name><![CDATA[coding]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>game-egnine</wp:tag_slug><wp:tag_name><![CDATA[game egnine]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>opengl</wp:tag_slug><wp:tag_name><![CDATA[opengl]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>opera</wp:tag_slug><wp:tag_name><![CDATA[opera]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>air</wp:tag_slug><wp:tag_name><![CDATA[Air]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>javafx</wp:tag_slug><wp:tag_name><![CDATA[JavaFX]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>silverlight</wp:tag_slug><wp:tag_name><![CDATA[Silverlight]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>databases</wp:tag_slug><wp:tag_name><![CDATA[Databases]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>sql</wp:tag_slug><wp:tag_name><![CDATA[SQL]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>iphone</wp:tag_slug><wp:tag_name><![CDATA[iPhone]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>web-development</wp:tag_slug><wp:tag_name><![CDATA[Web Development]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[Linux]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>webkit</wp:tag_slug><wp:tag_name><![CDATA[Webkit]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>join</wp:tag_slug><wp:tag_name><![CDATA[JOIN]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>group-by</wp:tag_slug><wp:tag_name><![CDATA[GROUP BY]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>design</wp:tag_slug><wp:tag_name><![CDATA[Design]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>unix</wp:tag_slug><wp:tag_name><![CDATA[unix]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>javascript-programming</wp:tag_slug><wp:tag_name><![CDATA[javascript programming]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>json</wp:tag_slug><wp:tag_name><![CDATA[json]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>xml</wp:tag_slug><wp:tag_name><![CDATA[xml]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>mootools</wp:tag_slug><wp:tag_name><![CDATA[mootools]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>game-engine</wp:tag_slug><wp:tag_name><![CDATA[game engine]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>lonewolf</wp:tag_slug><wp:tag_name><![CDATA[lonewolf]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>work</wp:tag_slug><wp:tag_name><![CDATA[work]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>ada</wp:tag_slug><wp:tag_name><![CDATA[ada]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>collision</wp:tag_slug><wp:tag_name><![CDATA[collision]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>2d</wp:tag_slug><wp:tag_name><![CDATA[2d]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>binary</wp:tag_slug><wp:tag_name><![CDATA[binary]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>sdl</wp:tag_slug><wp:tag_name><![CDATA[sdl]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>vala-pong</wp:tag_slug><wp:tag_name><![CDATA[vala. pong]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>game-development</wp:tag_slug><wp:tag_name><![CDATA[game development]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>vala</wp:tag_slug><wp:tag_name><![CDATA[Vala]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>pascal</wp:tag_slug><wp:tag_name><![CDATA[pascal]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>haskell</wp:tag_slug><wp:tag_name><![CDATA[haskell]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>PRIVATE</wp:tag_slug><wp:tag_name><![CDATA[PRIVATE]]></wp:tag_name></wp:tag>
    <wp:tag><wp:tag_slug>FRIENDS-ONLY</wp:tag_slug><wp:tag_name><![CDATA[FRIENDS-ONLY]]></wp:tag_name></wp:tag>
    
        <wp:author>
        <wp:author_id>1000</wp:author_id>
        <wp:author_login>sutabi</wp:author_login>
        <wp:author_display_name><![CDATA[Joseph Montanez]]></wp:author_display_name>
        <wp:author_email>jmontanez@gorilla3d.com</wp:author_email>
        <wp:author_first_name><![CDATA[]]></wp:author_first_name>
        <wp:author_last_name><![CDATA[]]></wp:author_last_name>
    </wp:author>

        <pubDate>Thu, 26 Apr 2007 07:28:28 GMT</pubDate>
    <item>
      <title><![CDATA[A Diamond in the Ruff]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/951734</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/951734#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-951734</guid>
      <pubDate>Thu, 26 Apr 2007 07:28:28 GMT</pubDate>
      <category domain="tag" nicename="python"><![CDATA[python]]></category><category domain="tag" nicename="programming"><![CDATA[programming]]></category><category domain="tag" nicename="3d"><![CDATA[3D]]></category><category domain="tag" nicename="development"><![CDATA[development]]></category><category domain="tag" nicename="software"><![CDATA[software]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>1</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Been about 3 days and battling a nasty redraw bug, which included not always redrawing the screen when its active. Any who, I did some basic geometry rendering and event system running. The whole reason I choose to develop my own engine and not use something like Ogre, is simple. I want to know what I&#39;m working with, If I need access to the bone animation system and rotate bones well I want access to it. Mines not meant to be fast, but defiantly a lot easier to deal with. Here are two test suites below :) enjoy!!!<br/><br/><a href="/sutabi/albums/showpic.dml?album=251631&amp;picture=3715179" target="_blank"><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/251631/thumbs/r1.jpg_thumb.jpg' /></span></a>  <br/><a href="/sutabi/albums/showpic.dml?album=251631&amp;picture=3715244" target="_blank"><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/251631/thumbs/r2.jpg_thumb.jpg' /></span></a> <br/><strong>Test #1:</strong> As you can see this is a bare-bones type of snapshot. I intended this to be simple hopefully it will be. For the API it still needs a big help, I&#39;m not good at naming stuff so maybe I&#39;ll eventually have a programmer help me out or something.<br/><strong>Test #2:</strong> This shows localized events, so basically if somehow that object comes selected keyboard based events will be applied. Also shows render types allowing me to mix types of rendering styles, hopefully this will mature into something useful. As of right now that demo rotates a cube in 3d based on arrow keys.<br/><br/><br/>Currently I am using wxPython (windowing/events) and PyOpenGL. I&#39;ll be adding PIL (textural stuff), PyMedia for audio, PyOde for physics. If you haven&#39;t caught on yet, I am using python to develope this engine :eyes: ]]></content:encoded>
      <wp:post_date>2007-04-26 00:04:28</wp:post_date>
      <wp:post_date_gmt>2007-04-26 07:04:28</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>a-diamond-in-the-ruff</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Tooling the Staff - Task Management]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/951920</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/951920#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-951920</guid>
      <pubDate>Thu, 26 Apr 2007 08:37:15 GMT</pubDate>
      <category domain="tag" nicename="mysql"><![CDATA[mysql]]></category><category domain="tag" nicename="web"><![CDATA[web]]></category><category domain="tag" nicename="php"><![CDATA[php]]></category><category domain="tag" nicename="css"><![CDATA[css]]></category><category domain="tag" nicename="javascript"><![CDATA[javascript]]></category><category domain="tag" nicename="xhtml"><![CDATA[xhtml]]></category><category domain="tag" nicename="web20"><![CDATA[web2.0]]></category><category domain="tag" nicename="ajax"><![CDATA[ajax]]></category><category domain="tag" nicename="development"><![CDATA[development]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>2</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->I am a programmer and working on developing a MMORPG, but to tease and eyecandy one must first devote time to creating tools to drive your staff. I set out to build something unique to every element, I am by nature a web developer. I developed a streamless tasking system, so that my staff can jumble through stuff without a whole lot figuring out how a system works. This is developed in php, mysql, javascript (using a lot of mootools) and good old xhtml+css. This is completely function on Firefox, Opera &amp; SeaMonkey.<br/><br/>Broswer used in video: <strong>Opera</strong><br/><object width="425" height="350"><param name="movie" value="http://www.youtube.com/v/QTOtxiRDwVo" /><embed src="http://www.youtube.com/v/QTOtxiRDwVo" type="application/x-shockwave-flash" width="425" height="350" allowscriptaccess="never" /></object>]]></content:encoded>
      <wp:post_date>2007-04-26 01:04:15</wp:post_date>
      <wp:post_date_gmt>2007-04-26 08:04:15</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>tooling-the-staff-task-management</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Google is finally kind to me!]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/955348</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/955348#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-955348</guid>
      <pubDate>Fri, 27 Apr 2007 11:21:39 GMT</pubDate>
      <category domain="tag" nicename="web"><![CDATA[web]]></category><category domain="tag" nicename="anime"><![CDATA[anime]]></category><category domain="tag" nicename="google"><![CDATA[google]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>3</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><a href="/sutabi/albums/showpic.dml?album=252368&amp;picture=3724649" target="_blank"><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/252368/thumbs/Untitled-1.jpg_thumb.jpg' /></span></a> It seemed one of my sites was not listed from google search but now 5 months later google finally decided to index it! I was only getting 30ish hits a day I basicly gave up on the site. Now its steadly rising last week it jumped to 70 hits a day and now it at 90 hits a day... hm.. :) Yahoo indexed my page 15 days after I put it up and MSN was only a month away. I still like Yahoo simply due to the fact their search results are much fresher then Google&#39;s results.<br/><br/>I am really tempted to add more content to that site :]. If your interest in see what it is, just check out <a href="http://www.animereign.com" target="_blank">http://www.animereign.com</a>. I even have a redesign in the works I put on hold simple because I lost interest. I love watching anime but it take a lot of time to convert these by hand and what not :\. ]]></content:encoded>
      <wp:post_date>2007-04-27 04:04:39</wp:post_date>
      <wp:post_date_gmt>2007-04-27 11:04:39</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>google-is-finally-kind-to-me</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[My programming pitfall]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/956739</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/956739#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-956739</guid>
      <pubDate>Fri, 27 Apr 2007 22:45:25 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>4</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><a href="/sutabi/albums/showpic.dml?album=251631&amp;picture=3730521" target="_blank"><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/251631/thumbs/textural_demo.jpg_thumb.jpg' /></span></a> It should have only taken 3 hour instead took 2 days. I was just trying to add simple support for texture, yet it seemed harder then I anticipated! The code I added worked flawless I even added debugging points to know where/when/what texture is being used/loaded. Yet after 2 days of frustration I got no where. I ended up posted my code and no one even knew the issue, so I did what I should have done when I first noticed the issue. Degrade my code to find where I am going wrong.<br/><br/><br/><br/><br/><strong>Step 1:</strong> <i>Understand the problem:</i><br/>My texture is not loading, I added debugging steps and my texture is read, just not stored at all.<br/><br/><strong>Step 2:</strong> <i>Isolate the problem:</i><br/>Rip out the elements of my game-engine to fit into a small set of code, thats running in 1 file.<br/><br/><strong>Step 3:</strong> <i>Work on solving the issue from there:</i><br/>Well, I ran my compressed lighter version and it works, none of the code is different!!! This got me no where!!!<br/><br/><strong>Step 4:</strong> <i>Analyze the working solution:</i><br/>If my compressed code works and my engine code doesn&#39;t.. They both use the same code... AH!!! I see that my texture, in the lighter version, is loaded after wxPython&#39;s glCanvas is initialized! *sigh* So much wasted time.]]></content:encoded>
      <wp:post_date>2007-04-27 15:04:25</wp:post_date>
      <wp:post_date_gmt>2007-04-27 22:04:25</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>my-programming-pitfall</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Refactoring]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/960971</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/960971#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-960971</guid>
      <pubDate>Sun, 29 Apr 2007 11:43:14 GMT</pubDate>
      <category domain="tag" nicename="coding"><![CDATA[coding]]></category><category domain="tag" nicename="model"><![CDATA[model]]></category><category domain="tag" nicename="models"><![CDATA[models]]></category><category domain="tag" nicename="programming"><![CDATA[programming]]></category><category domain="tag" nicename="3d"><![CDATA[3D]]></category><category domain="tag" nicename="modeling"><![CDATA[modeling]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>5</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><a href="/sutabi/albums/showpic.dml?album=251631&amp;picture=3748674" target="_blank"><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/251631/thumbs/refactor.jpg_thumb.jpg' /></span></a> In web development I hardly see this done, as long as code works its left alone until something is wrong. I cant say the same for desktop and mobile publishing, as I tend to refactor my code a lot more often in desktop applications then in web applications. This is for a major reason, its not as easy to benchmark your code in a web application rather then a desktop application.<br/><br/>Anyways in an attempt to create a more efficient way of texture management I needed to move render code from the mesh class to the world class. I&#39;ll also need to textural sorting, which is just matching all the faces for a particular texture unit so it can be chunked together.<br/><br/>I also started to re-edit my 3d models, this is just the Humi Race Male/Female. As you can see I&#39;ve started to refactor their faces, looks better with eyes, nose mouth :P ]]></content:encoded>
      <wp:post_date>2007-04-29 04:04:14</wp:post_date>
      <wp:post_date_gmt>2007-04-29 11:04:14</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>refactoring</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Added ray picking, now onto event handling!]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/967809</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/967809#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-967809</guid>
      <pubDate>Tue, 1 May 2007 17:56:51 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>6</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Ray picking just allows me to know when the mouse is over a 3d object. This is simply done by re-rendering the scene in solid colors and each object I want to test will have a unique color assigned to it, it then just checks the mouse position and which pixel that mouse pointer is over and returns the color. The color returned is then matched with the object&#39;s color, if true the object is selected :).<br/><br/>Now onto event handling, this part is complete but its not what I want to use to develop Darkoria. <a href="http://www.blender.org" target="_blank">Blender 3D</a> has a game engine code name Ketsji, its yet lived up to what it was intended to but the older docs still live of its true purpose. One of the things I like are the fact it uses sensors/acutators/controllers as logic bricks to build a game. I want to use that same concept to build Darkoria. I dont have a gerneral pipeline fleshed out but I have guidelines :) So I&#39;ll see how can I can get coding this way.]]></content:encoded>
      <wp:post_date>2007-05-01 10:05:51</wp:post_date>
      <wp:post_date_gmt>2007-05-01 17:05:51</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>added-ray-picking-now-onto-event-handling</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Mouse  & Font rendering]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/976883</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/976883#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-976883</guid>
      <pubDate>Fri, 4 May 2007 22:56:49 GMT</pubDate>
      <category domain="tag" nicename="python"><![CDATA[python]]></category><category domain="tag" nicename="programming"><![CDATA[programming]]></category><category domain="tag" nicename="3d"><![CDATA[3D]]></category><category domain="tag" nicename="opengl"><![CDATA[opengl]]></category><category domain="tag" nicename="game-engine"><![CDATA[game engine]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>7</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Right now the total size of the entire game-engine &#39;darkcore&#39; is 682 lines, as soon as I finish the event refactoring I,m sure that will jump to 1,000 lines easy. Anyways I got text working in the game engine, just rendered at runtime and compiled as quads. This is the fastest way known and considering this is pure python I&#39;ll need to rely on a lot a opengl trick to optimize as much as possible. The mouse is rendered as a point right now I need to setup a class to allow textures to be used.<br/><br/><br/><br/><object width="425" height="350"><param name="movie" value="http://www.youtube.com/v/FS5QAPjf75s" /><param name="wmode" value="transparent" /><embed src="http://www.youtube.com/v/FS5QAPjf75s" type="application/x-shockwave-flash" wmode="transparent" width="425" height="350" allowscriptaccess="never" /></object>]]></content:encoded>
      <wp:post_date>2007-05-04 15:05:49</wp:post_date>
      <wp:post_date_gmt>2007-05-04 22:05:49</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>mouse</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>
      <wp:comment>
        <wp:comment_id>1</wp:comment_id>
        <wp:comment_author>Lady0fFire</wp:comment_author>
        <wp:comment_date_gmt>2007-05-05 05:05:32</wp:comment_date_gmt>
        <wp:comment_date>2007-05-04 22:05:32</wp:comment_date>
        <wp:comment_approved>1</wp:comment_approved>>
        <wp:comment_content><![CDATA[hey Joey. It&#39;s okay you know I love &#39;bothing&#39; to read this. :-p lol<br/>*huggles*]]></wp:comment_content>
      </wp:comment>

    </item>
    <item>
      <title><![CDATA[Why I choose Opera Browser]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1059926</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1059926#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1059926</guid>
      <pubDate>Tue, 5 Jun 2007 14:13:52 GMT</pubDate>
      <category domain="tag" nicename="opera"><![CDATA[opera]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>8</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->I choose opera because:<br/><ol><li> Speed</li><li> Installtion of themes &amp; widgets w/o restarting</li><li> Low memory use</li><li> Working on Linux</li><li> Community</li></ol><br/><br/><strong>Speed</strong><br/>Opera is downright kills any other browser I&#39;ve used and yes even IE. However it has a limit to its speed, larger based html page that used extensive amount of elements bring opera down to its knees, while firefox can still manage them seamlessly. Still firefox is slower overall, but it can handle a lot more then in terms of heavy &amp; rich applications, like Flash running faster in Firefox. But if im just looking up information and not needing that extra &quot;emph&quot; to handle heavy/basicly coded sites then Opera wins. Plus the back button oh gosh the mere fact is just renders the same content as before is just lovely.<br/><br/><strong>Installation</strong><br/>This I just love, its bad enough to restart a browser but installing a widget is usually painful. Opera lets you view them on the fly and just 1 click.<br/><br/><strong>Memory</strong><br/>This is vital on my laptop it only has 256MB RAM and firefox just gobbles that up. Opera stays low enough to still enough my Xubuntu goodness without clogging my pipes. I want my pipes freeee!<br/><br/><strong>Linux</strong><br/>I am finding more reason to be on linux and less on windows. Even so the smallest thing make a difference, Opera on my Gnome desktop stashes its icon on my &quot;Notification Area&quot; which is just great! When will firefox do this?<br/><br/><strong>Community</strong><br/>This is very unique and very much like Ruby, because Opera&#39;s userbase is still small you get this sense of sepcialization and feel apart of this community even if you just like its blog system. Not to mention the powerful of features like blocking people from &quot;Access Rights&quot; &amp; Mapping your tags @__@.]]></content:encoded>
      <wp:post_date>2007-06-05 07:06:52</wp:post_date>
      <wp:post_date_gmt>2007-06-05 14:06:52</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name></wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[My Web Development Todo List]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1185506</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1185506#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1185506</guid>
      <pubDate>Mon, 23 Jul 2007 23:33:02 GMT</pubDate>
      <category domain="tag" nicename="air"><![CDATA[Air]]></category><category domain="tag" nicename="silverlight"><![CDATA[Silverlight]]></category><category domain="tag" nicename="javafx"><![CDATA[JavaFX]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>9</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->With all the newer tecnhnologies coming out I want to push myself to learn a few things. But before I do that, I still want to deploy an application that people will enjoy using... I tried with AnimeReign but the &quot;Target Market&quot; is just too small for me to pick up any real mommentum. <br/><br/>As far as the Air, Silverlight &amp; JavaFX battle, I personlly would like to choose Air, but they still have yet provided a linux solution. And Silverlight has a linux solution thanks to Mono, but there is a lot of workaround to get it working and its not done yet. As for JavaFX I was looking at demos and its 2D lib is just blurry textures which is really iffy to me, also getting the application to start is a drain having the desktop starter and then loading and downloading...<br/><br/><ol><li> Deploy an web application people enjoy</li><li> More advance MySQL quries</li><li> Learn Adobe Air</li><li> Learn Silverlight (Well Moonlight)</li><li> Learn JavaFX</li></ol>]]></content:encoded>
      <wp:post_date>2007-07-23 16:07:02</wp:post_date>
      <wp:post_date_gmt>2007-07-23 23:07:02</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>my-web-development-todo-list</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[MySQL Join Introduction: Part 1]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1196660</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1196660#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1196660</guid>
      <pubDate>Fri, 27 Jul 2007 20:33:24 GMT</pubDate>
      <category domain="tag" nicename="sql"><![CDATA[SQL]]></category><category domain="tag" nicename="mysql"><![CDATA[mysql]]></category><category domain="tag" nicename="databases"><![CDATA[Databases]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>10</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><p class="P1">Joins in <span class="T1">MySQL</span> can be love at first site or hell to work with. This is all dependent on what your trying to accomplish in a <span class="T1">Query</span>. In this tutorial we will go over the basics  of a <span class="T1">Join</span> and the most common uses you see.</p><p class="P1" /> <p class="P3">Prerequisites: </p><ol style="margin-left: 1.25cm; list-style-type: decimal;"><li class="P5" style="margin-left: 0cm;"><p class="P5" style="margin-left: 0.25cm;">How in create tables from a file or <span class="T1">SQL</span> <span class="T1">Query</span> in <span class="T1">MySQL</span></p></li></ol><p class="P4"><span class="T1"></span></p><p class="P2">Below is our dataset we will be using throughout this tutorial. You can copy and paste or <a class="attach" href="http://files.myopera.com/sutabi/blog/joins.sql" target="_blank">download the SQL file</a></p><p class="Textbody"><span class="T1"></span></p>


<p class="P6"><span class="T1">
CREATE TABLE  `applications` ( 

  `app_id` int(11) NOT NULL auto_increment,

  `app_name` varchar(45) NOT NULL,

  `app_desc` text NOT NULL,

  `cat_id` int(11) NOT NULL,

PRIMARY KEY  (`app_id`)

) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;



LOCK TABLES `applications` WRITE;

INSERT INTO `applications` VALUES  (1,&#39;Orca Screen Reader and Magnifier&#39;,&#39;Present on-screen information as speech or braille, or magnify the screen&#39;,1),

 (2,&#39;Text Editor&#39;,&#39;Edit text files&#39;,9),

 (3,&#39;Tomboy Notes&#39;,&#39;Simple and easy to use note-taking&#39;,9),

 (4,&#39;Search&#39;,&#39;Search for data on your desktop&#39;,9),

 (5,&#39;Disk Usage Analyzer&#39;,&#39;Analyze disk useage&#39;,9),

 (6,&#39;Dictionary&#39;,&#39;Lookup words in an online dictionary&#39;,9),

 (7,&#39;Character Map&#39;,&#39;Insert special characters into documents&#39;,9),

 (8,&#39;Calculator&#39;,&#39;Perform caculations&#39;,9),

 (9,&#39;Inkscape Vector Illustrator&#39;,&#39;Create and edit Scalable Vector Graphics images&#39;,7),

 (10,&#39;Gimp Image Editor&#39;,&#39;Create and edit images or photographs&#39;,7);

UNLOCK TABLES;



CREATE TABLE  `categories` (

  `cat_id` int(11) NOT NULL auto_increment,

  `cat_name` varchar(65) NOT NULL,

  PRIMARY KEY  (`cat_id`)

) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=latin1;



LOCK TABLES `categories` WRITE;

INSERT INTO `categories` VALUES  (1,&#39;Accessibility&#39;),

 (2,&#39;System Tools&#39;),

 (3,&#39;Sound &amp; Video&#39;),

 (4,&#39;Programming&#39;),

 (5,&#39;Office&#39;),

 (6,&#39;Internet&#39;),

 (7,&#39;Graphics&#39;),

 (8,&#39;Games&#39;),

 (9,&#39;Accessories&#39;);

UNLOCK TABLES;

</span></p><p class="P6"><span class="T1"></span></p>

<p class="Textbody" /> <h2 class="Heading2"><a name="Our_first_MySQL_join_3A_Listing_all_the_applications_in_a_category">Our first MySQL join: Listing all the applications in a category</a></h2><p class="Textbody"><span class="T5">What will try to accomplish here listing all the applications we have a in a single category.  I will first show you how a new comer will perform the </span><span class="T7">Query</span><span class="T6">. The problem with </span><a href="#figure1"><span class="T6">figure 1</span></a> <span class="T5">is that, what if we only knew the name of the category and not the id? A new comer would query for the category given the name, then fetch the id, and then finally query for the applications in the category. Well with a </span><span class="T7">JOIN</span><span class="T5"> we can accomplish this by selecting the </span><span class="T8">categories</span><span class="T5"> table and </span><span class="T7">JOIN</span><span class="T5"> the </span><span class="T8">applications</span><span class="T5"> table. See </span><a href="#figure2"><span class="T5">figure 2</span></a><span class="T5"> for the SQL Query there are 2 versions, both accomplish the same feat. The </span><span class="T9">&#39;Alternative Version&#39;</span><span class="T5"> is the shorthand way of completing a </span><span class="T7">JOIN.</span></p>




<p class="Salutation">Figure 1.</p><p class="SQL"><span class="T3">SELECT</span><span class="T2"> * </span><span class="T4">FROM</span><span class="T2"> categories </span><span class="T4">WHERE</span><span class="T2"> </span><span class="T6">categories</span><span class="T2">.cat_name = &#39;Accessories&#39;</span></p><div style="text-align: left;">

<table cellspacing="0" cellpadding="0" border="0" class="Table2" width="100%"><colgroup><col width="130" /><col width="639" /></colgroup><tr><td style="text-align: left; width: 1.1674in;" class="Table2A1"><p class="P7">cat_id </p></td><td style="text-align: left; width: 5.7583in;" class="Table2B1"><p class="P7">cat_name </p></td></tr><tr><td style="text-align: left; width: 1.1674in;" class="Table2A2"><p class="TableContents">9 </p></td><td style="text-align: left; width: 5.7583in;" class="Table2B2"><p class="TableContents">Accessories </p></td></tr></table></div><p class="Textbody"><span class="T2"></span></p><p class="SQL"><span class="T3">SELECT</span><span class="T2"> * </span><span class="T4">FROM</span><span class="T2"> applications </span><span class="T4">WHERE</span><span class="T2"> </span><span class="T6">applications</span><span class="T2">.cat_id = 9</span></p><div style="text-align: left;"><table cellspacing="0" cellpadding="0" border="0" class="Table1"><colgroup><col width="68" /><col width="167" /><col width="475" /><col width="58" /></colgroup><tr><td style="text-align: left; width: 0.6153in;" class="Table1A1"><p class="P7">app_id </p></td><td style="text-align: left; width: 1.509in;" class="Table1A1"><p class="P7">app_name </p></td><td style="text-align: left; width: 4.2813in;" class="Table1A1"><p class="P7">app_desc </p></td><td style="text-align: left; width: 0.5181in;" class="Table1D1"><p class="P7">cat_id </p></td></tr><tr><td style="text-align: left; width: 0.6153in;" class="Table1A2"><p class="P8">2 </p></td><td style="text-align: left; width: 1.509in;" class="Table1A2"><p class="TableContents">Text Editor </p></td><td style="text-align: left; width: 4.2813in;" class="Table1A2"><p class="TableContents">Edit text files </p></td><td style="text-align: left; width: 0.5181in;" class="Table1D2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.6153in;" class="Table1A2"><p class="P8">3 </p></td><td style="text-align: left; width: 1.509in;" class="Table1A2"><p class="TableContents">Tomboy Notes </p></td><td style="text-align: left; width: 4.2813in;" class="Table1A2"><p class="TableContents">Simple and easy to use not-taking </p></td><td style="text-align: left; width: 0.5181in;" class="Table1D2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.6153in;" class="Table1A2"><p class="P8">4 </p></td><td style="text-align: left; width: 1.509in;" class="Table1A2"><p class="TableContents">Search </p></td><td style="text-align: left; width: 4.2813in;" class="Table1A2"><p class="TableContents">Search for data on your desktop </p></td><td style="text-align: left; width: 0.5181in;" class="Table1D2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.6153in;" class="Table1A2"><p class="P8">5 </p></td><td style="text-align: left; width: 1.509in;" class="Table1A2"><p class="TableContents">Disk Usage Analyzer </p></td><td style="text-align: left; width: 4.2813in;" class="Table1A2"><p class="TableContents">Analyze disk useage </p></td><td style="text-align: left; width: 0.5181in;" class="Table1D2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.6153in;" class="Table1A2"><p class="P8">6 </p></td><td style="text-align: left; width: 1.509in;" class="Table1A2"><p class="TableContents">Dictionary </p></td><td style="text-align: left; width: 4.2813in;" class="Table1A2"><p class="TableContents">Lookup words in an online dictionary </p></td><td style="text-align: left; width: 0.5181in;" class="Table1D2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.6153in;" class="Table1A2"><p class="P8">7 </p></td><td style="text-align: left; width: 1.509in;" class="Table1A2"><p class="TableContents">Character Map </p></td><td style="text-align: left; width: 4.2813in;" class="Table1A2"><p class="TableContents">Insert special characters into documents </p></td><td style="text-align: left; width: 0.5181in;" class="Table1D2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.6153in;" class="Table1A2"><p class="P8">8 </p></td><td style="text-align: left; width: 1.509in;" class="Table1A2"><p class="TableContents">Calculator </p></td><td style="text-align: left; width: 4.2813in;" class="Table1A2"><p class="TableContents">Perform calculations </p></td><td style="text-align: left; width: 0.5181in;" class="Table1D2"><p class="P8">9 </p></td></tr></table></div><p class="Textbody" /> <p class="Textbody" /> <p class="Salutation">Figure 2.</p><p class="SQL"><span class="T4">SELECT</span> * <span class="T4">FROM</span> categories <span class="T4">JOIN</span> applications <span class="T4">ON</span> <span class="T5">categories</span>.cat_id = <span class="T5">applications</span>.cat_id <span class="T4">WHERE</span> <span class="T5">categories</span>.cat_name = &#39;Accessories&#39;</p><p class="Salutation">Alternative Version: </p><p class="SQL"><span class="T4">SELECT</span> * <span class="T4">FROM</span> categories, applications <span class="T4">WHERE</span> categories.cat_name = &#39;Accessories&#39; <span class="T4">AND</span> categories.cat_id = applications.cat_id</p><div style="text-align: left;"><table cellspacing="0" cellpadding="0" border="0" class="Table3"><colgroup><col width="62" /><col width="99" /><col width="80" /><col width="166" /><col width="304" /><col width="58" /></colgroup><tr><td style="text-align: left; width: 0.5618in;" class="Table3A1"><p class="P7">cat_id </p></td><td style="text-align: left; width: 0.8958in;" class="Table3A1"><p class="P7">cat_name </p></td><td style="text-align: left; width: 0.7188in;" class="Table3A1"><p class="P7">app_id </p></td><td style="text-align: left; width: 1.491in;" class="Table3A1"><p class="P7">app_name </p></td><td style="text-align: left; width: 2.7375in;" class="Table3A1"><p class="P7">app_desc </p></td><td style="text-align: left; width: 0.5181in;" class="Table3F1"><p class="P7">cat_id </p></td></tr><tr><td style="text-align: left; width: 0.5618in;" class="Table3A2"><p class="P8">9 </p></td><td style="text-align: left; width: 0.8958in;" class="Table3A2"><p class="TableContents">Accessories </p></td><td style="text-align: left; width: 0.7188in;" class="Table3A2"><p class="P8">2 </p></td><td style="text-align: left; width: 1.491in;" class="Table3A2"><p class="TableContents">Text Editor </p></td><td style="text-align: left; width: 2.7375in;" class="Table3A2"><p class="TableContents">Edit text files </p></td><td style="text-align: left; width: 0.5181in;" class="Table3F2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.5618in;" class="Table3A2"><p class="P8">9 </p></td><td style="text-align: left; width: 0.8958in;" class="Table3A2"><p class="P8">Accessories </p></td><td style="text-align: left; width: 0.7188in;" class="Table3A2"><p class="P8">3 </p></td><td style="text-align: left; width: 1.491in;" class="Table3A2"><p class="TableContents">Tomboy Notes </p></td><td style="text-align: left; width: 2.7375in;" class="Table3A2"><p class="TableContents">Simple and easy to use not-taking </p></td><td style="text-align: left; width: 0.5181in;" class="Table3F2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.5618in;" class="Table3A2"><p class="P8">9 </p></td><td style="text-align: left; width: 0.8958in;" class="Table3A2"><p class="P8">Accessories </p></td><td style="text-align: left; width: 0.7188in;" class="Table3A2"><p class="P8">4 </p></td><td style="text-align: left; width: 1.491in;" class="Table3A2"><p class="TableContents">Search </p></td><td style="text-align: left; width: 2.7375in;" class="Table3A2"><p class="TableContents">Search for data on your desktop </p></td><td style="text-align: left; width: 0.5181in;" class="Table3F2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.5618in;" class="Table3A2"><p class="P8">9 </p></td><td style="text-align: left; width: 0.8958in;" class="Table3A2"><p class="P8">Accessories </p></td><td style="text-align: left; width: 0.7188in;" class="Table3A2"><p class="P8">5 </p></td><td style="text-align: left; width: 1.491in;" class="Table3A2"><p class="TableContents">Disk Usage Analyzer </p></td><td style="text-align: left; width: 2.7375in;" class="Table3A2"><p class="TableContents">Analyze disk useage </p></td><td style="text-align: left; width: 0.5181in;" class="Table3F2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.5618in;" class="Table3A2"><p class="P8">9 </p></td><td style="text-align: left; width: 0.8958in;" class="Table3A2"><p class="P8">Accessories </p></td><td style="text-align: left; width: 0.7188in;" class="Table3A2"><p class="P8">6 </p></td><td style="text-align: left; width: 1.491in;" class="Table3A2"><p class="TableContents">Dictionary </p></td><td style="text-align: left; width: 2.7375in;" class="Table3A2"><p class="TableContents">Lookup words in an online dictionary </p></td><td style="text-align: left; width: 0.5181in;" class="Table3F2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.5618in;" class="Table3A2"><p class="P8">9 </p></td><td style="text-align: left; width: 0.8958in;" class="Table3A2"><p class="P8">Accessories </p></td><td style="text-align: left; width: 0.7188in;" class="Table3A2"><p class="P8">7 </p></td><td style="text-align: left; width: 1.491in;" class="Table3A2"><p class="TableContents">Character Map </p></td><td style="text-align: left; width: 2.7375in;" class="Table3A2"><p class="TableContents">Insert special characters into documents </p></td><td style="text-align: left; width: 0.5181in;" class="Table3F2"><p class="P8">9 </p></td></tr><tr><td style="text-align: left; width: 0.5618in;" class="Table3A2"><p class="P8">9 </p></td><td style="text-align: left; width: 0.8958in;" class="Table3A2"><p class="P8">Accessories </p></td><td style="text-align: left; width: 0.7188in;" class="Table3A2"><p class="P8">8 </p></td><td style="text-align: left; width: 1.491in;" class="Table3A2"><p class="TableContents">Calculator </p></td><td style="text-align: left; width: 2.7375in;" class="Table3A2"><p class="TableContents">Perform calculations </p></td><td style="text-align: left; width: 0.5181in;" class="Table3F2"><p class="P8">9 </p></td></tr></table></div><p class="Standard" /> ]]></content:encoded>
      <wp:post_date>2007-07-27 13:07:24</wp:post_date>
      <wp:post_date_gmt>2007-07-27 20:07:24</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>mysql-join-introduction</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>
      <wp:comment>
        <wp:comment_id>2</wp:comment_id>
        <wp:comment_author>eztigma</wp:comment_author>
        <wp:comment_date_gmt>2007-07-30 19:07:27</wp:comment_date_gmt>
        <wp:comment_date>2007-07-30 12:07:27</wp:comment_date>
        <wp:comment_approved>1</wp:comment_approved>>
        <wp:comment_content><![CDATA[Wow, very useful! :)]]></wp:comment_content>
      </wp:comment>

    </item>
    <item>
      <title><![CDATA[iPhone Web Development Death Zone]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1199514</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1199514#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1199514</guid>
      <pubDate>Sat, 28 Jul 2007 23:23:43 GMT</pubDate>
      <category domain="tag" nicename="web-development"><![CDATA[Web Development]]></category><category domain="tag" nicename="iphone"><![CDATA[iPhone]]></category><category domain="tag" nicename="webkit"><![CDATA[Webkit]]></category><category domain="tag" nicename="linux"><![CDATA[Linux]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>11</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Right now I have a duel boot Windows 2k / Ubuntu 7.04 and I have to do iPhone development, so if you develop for the iPhone then you know my problem. Safari is for Windows XP/Vista &amp; Mac OSX but Safari does seem to work with Windows 2k, the problem with that NO DEVELOPEMENT TOOLS FOR AJAX OR GENERAL JAVASCRIPT ERRORS. So I tried the development builds and its just crashing and I soooo badly need this tool, the only thing that comes close is Opera, which I have been using to debug and just used Safari 3 to run the Web Application. Problem is as I get deeping into Safari specific code it works less and less on Opera and is slowing down my development flow. <br/><br/>So I find out that webkit has been ported with QT4 to linux so I follow the guide but I guess I don&#39;t have QMake4 so right now I am downloading &amp; compiling QT4 in hope that I can compile webkit once and for all.<br/><br/>Even worst of all I don&#39;t have an iPhone to test result I have to wait for the client to test it.]]></content:encoded>
      <wp:post_date>2007-07-28 16:07:43</wp:post_date>
      <wp:post_date_gmt>2007-07-28 23:07:43</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>iphone-web-development-death-zone</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Shabb Project Management Rewrite]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1203154</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1203154#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1203154</guid>
      <pubDate>Mon, 30 Jul 2007 09:47:25 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>12</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/323383/thumbs/shabb_login.png_thumb.jpg' /></span> I am writing it from scratch with a php framework called Zend Framework, along with the help of SWAT an application framework. I also want to gear this towards being like Freshbooks, but modular in the sense you can add modules to your company. So at first you get a very simple interface and you can eventually build your company&#39;s project manager into something with all those bells and whistles. <br/><br/><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/323383/thumbs/shabb_company_edit.png_thumb.jpg' /></span> This is aimed to be an opensource project with a service. If you cant install it on the server you can use the serviced version that will allow you to run shabb without installing it on your own server. This service will cost $5.00 USD a month. Which seems fair given you can always just download it instead.]]></content:encoded>
      <wp:post_date>2007-07-30 02:07:25</wp:post_date>
      <wp:post_date_gmt>2007-07-30 09:07:25</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>shabb-project-management-rewrite</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[MySQL Join Introduction: Part 2]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1207441</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1207441#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1207441</guid>
      <pubDate>Tue, 31 Jul 2007 22:09:25 GMT</pubDate>
      <category domain="tag" nicename="mysql"><![CDATA[mysql]]></category><category domain="tag" nicename="join"><![CDATA[JOIN]]></category><category domain="tag" nicename="php"><![CDATA[php]]></category><category domain="tag" nicename="group-by"><![CDATA[GROUP BY]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>13</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><h2 class="Heading2"><a name="Our_next_MySQL_JOIN_w_2F_GROUP_3A_Counting_the__23_of_Applications_in_a_Category">Our next MySQL JOIN w/ GROUP: Counting the # of Applications in a Category</a></h2><p class="P1">The next thing I see quite a lot, you want to list all the categories and right next to the category you want to list the number of applications. They fetch all the categories and then after each row then query for a count of all the applications in that category. Figure 1 shows ruff idea of what I mean, while Figure 2 is a much better approach  </p><p class="P1" /> <p class="Salutation">Figure 1. </p><pre><p class="SQL"><span class="T12">$</span><span class="T12">sql</span><span class="T11"> </span><span class="T12">=</span><span class="T11"> &#39;</span><span class="T3">SELECT</span><span class="T2"> * </span><span class="T4">FROM</span><span class="T2"> categories&#39;;</span></p><p class="SQL"><span class="T2">$result = </span><span class="T1">mysql_query</span><span class="T2">($sql);</span></p><p class="SQL"><span class="T2">$categories = </span><span class="T1">array</span><span class="T2">();</span></p><p class="SQL"><span class="T2">while($row = </span><span class="T1">mysql_fetch_assoc</span><span class="T2">($result)){</span></p><p class="SQL"><span class="T2">        $categories[$row[&#39;cat_id&#39;]] = $row;</span></p><p class="SQL"><span class="T2">}</span></p><p class="SQL"><span class="T2"></span></p><p class="SQL"><span class="T2">foreach($categories as $category){</span></p><p class="SQL"><span class="T12">        </span><span class="T12">$</span><span class="T12">sql</span><span class="T11"> </span><span class="T12">=</span><span class="T11"> “</span><span class="T3">SELECT</span><span class="T2"> </span><span class="T4">COUNT</span><span class="T2">(*) </span><span class="T4">AS</span><span class="T2"> total_apps </span><span class="T4">FROM</span><span class="T2"> applications </span><span class="T4">WHERE</span><span class="T2"> cat_id = {$category[&#39;cat_id&#39;]}”;</span></p><p class="SQL"><span class="T2">        $result = </span><span class="T1">mysql_query</span><span class="T2">($sql);</span></p><p class="SQL"><span class="T2">        $row = </span><span class="T1">mysql_fetch_assoc</span><span class="T2">($result);</span></p><p class="SQL"><span class="T2">        $categories[$category[&#39;cat_id&#39;]][&#39;total_apps&#39;] = $row[&#39;total_apps&#39;];</span></p><p class="SQL"><span class="T2">}</span></p></pre><p class="Salutation" /> <p class="Salutation">Figure 2. </p><pre><p class="SQL"><span class="T12">$</span><span class="T12">sql</span><span class="T11"> </span><span class="T12">=</span><span class="T11"> &#39;</span><span class="T3">SELECT</span><span class="T13"> </span><span class="T14">categories.* ,</span><span class="T13"> </span><span class="T3">COUNT</span><span class="T14">(applications.app_id)</span><span class="T13"> </span><span class="T3">AS</span><span class="T13"> </span><span class="T14">app_total
</span></p><p class="SQL">                        <span class="T4">FROM</span> categories, applications</p><p class="SQL">                        <span class="T4">WHERE</span> applications.cat_id = categories.cat_id
</p><p class="SQL"><span class="T13">                        </span><span class="T4">GROUP BY</span><span class="T13"> </span><span class="T14">categories.cat_id</span><span class="T2">&#39;;</span></p><p class="SQL"><span class="T2">$result = </span><span class="T1">mysql_query</span><span class="T2">($sql);</span></p><p class="SQL"><span class="T2">$categories = </span><span class="T1">array</span><span class="T2">();</span></p><p class="SQL"><span class="T2">while($row = </span><span class="T1">mysql_fetch_assoc</span><span class="T2">($result)){</span></p><p class="SQL"><span class="T2">        $categories[$row[&#39;cat_id&#39;]] = $row;</span></p><p class="SQL"><span class="T2">}</span></p></pre><div style="text-align: left;"><table cellspacing="0" cellpadding="0" border="0" class="Table4"><colgroup><col width="130" /><col width="320" /><col width="320" /></colgroup><tr><td style="text-align: left; width: 1.1674in;" class="Table4A1"><p class="P4">cat_id </p></td><td style="text-align: left; width: 2.8799in;" class="Table4A1"><p class="P4">cat_name </p></td><td style="text-align: left; width: 2.8799in;" class="Table4C1"><p class="P4">app_total </p></td></tr><tr><td style="text-align: left; width: 1.1674in;" class="Table4A2"><p class="TableContents">1 </p></td><td style="text-align: left; width: 2.8799in;" class="Table4A2"><p class="TableContents">Accessibility </p></td><td style="text-align: left; width: 2.8799in;" class="Table4C2"><p class="TableContents">1 </p></td></tr><tr><td style="text-align: left; width: 1.1674in;" class="Table4A2"><p class="TableContents">9 </p></td><td style="text-align: left; width: 2.8799in;" class="Table4A2"><p class="TableContents">Accessories </p></td><td style="text-align: left; width: 2.8799in;" class="Table4C2"><p class="TableContents">7 </p></td></tr><tr><td style="text-align: left; width: 1.1674in;" class="Table4A2"><p class="TableContents">7 </p></td><td style="text-align: left; width: 2.8799in;" class="Table4A2"><p class="TableContents">Graphics </p></td><td style="text-align: left; width: 2.8799in;" class="Table4C2"><p class="TableContents">2 </p></td></tr></table></div><p class="P1" /> ]]></content:encoded>
      <wp:post_date>2007-07-31 15:07:25</wp:post_date>
      <wp:post_date_gmt>2007-07-31 22:07:25</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>mysql-join-introduction-part-2</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[My first hate mail?]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1210406</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1210406#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1210406</guid>
      <pubDate>Wed, 1 Aug 2007 23:37:20 GMT</pubDate>
      <category domain="tag" nicename="design"><![CDATA[Design]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>14</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/blog/isrish_1.png' /></span> <blockquote class="bbquote"><p>nice templates you use from other people there guy..<br/>come up with something original</p></blockquote><br/><br/>Wow, I guess I am getting popular... The only site I have that uses a design not of my own but someone else is Shabb &amp; Surfin Fire, Shabb is not released nor even near done. So where is this hate coming from? I offer an anonymous way for people to contact me and yeah... I get this and the email address of &quot;me@me.com&quot;.<br/><br/>If this guy owned the templates I can understand, but im sure they would have left a valid email address. For www.AnimeReign.com when it first ran it used a template from <a href="http://www.oswd.org/" target="_blank">http://www.oswd.org/</a>, which went into 2 other designs which I did myself. Creator of the template which I got from <a href="http://www.oswd.org/" target="_blank">http://www.oswd.org/</a> expressed some feeling on wishing to be credited, so I did. In web design and development I see so little bashing when it comes to coding, those that have less skills then you will not bash you, just because. <br/><br/>So this leads me to this, whom ever sent that email own up, show yourself, prove that you can design better then me and I will bow to you. I in no way shape or form think I am a &quot;designer&quot; I like drawing and that&#39;s about it, layout design is not what I do best.]]></content:encoded>
      <wp:post_date>2007-08-01 16:08:20</wp:post_date>
      <wp:post_date_gmt>2007-08-01 23:08:20</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>my-first-hate-mail</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[My desktop cpu melted..!?]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1212869</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1212869#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1212869</guid>
      <pubDate>Thu, 2 Aug 2007 19:04:24 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>15</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->You think 60c (120f) is hot for a computer, try 112c (233.6 degrees Fahrenheit). That how hot my cpu got every day, it often resulted in my computer restarting and did for 2 years. I got the point of having the casing off and an everyday fan blowing on it to help cool. Well yesterday it started beeping, the kinda beeping you get when you overclock a cpu more then it can handle. So I let it cool, and turned it back on and started doing my work. My computer froze AGAIN and I went to touch my cpu fan &amp; cooler, ice cold... Why would it be ice cold and freeze. I turned it off and back on, starts beeping. I try it again, starts beeping. So I got to touch the cpu heatsink... ICE COLD. So I start to take everything out my computer (I have to just to get to the cpu). and I can&#39;t get the heatsink/cooler off... its stuck... So I give it a good YANK and off it comes WITH THE CPU!!! WTF THE CPU CAME WITH IT!!<br/><br/>Yeah.. I&#39;m in tears at this point, the thermal paste seems to have help bind my heatsink to my cpu. I try alcohol to dissolve the thermal paste, but no help. Ok so I dont need my cpu I can buy another but my heat/cooler is the only kind made for the special box and is no longer in production. So I did what anyone would do.. took a hammer and chisel to busted the cpu off my heatsink.<br/><br/>I could have saved my cpu, but given that my computer was so fucked anyways I might was well invest into some new hardware. So Monday when I get payed I will see what I will do.]]></content:encoded>
      <wp:post_date>2007-08-02 12:08:24</wp:post_date>
      <wp:post_date_gmt>2007-08-02 19:08:24</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>my-desktop-cpu-melted</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Massive Artwork Dump]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1215661</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1215661#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1215661</guid>
      <pubDate>Fri, 3 Aug 2007 16:57:21 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>16</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/283723/thumbs/biteme.jpg_thumb.jpg' /></span> I figured I&#39;d upload a few of my images from my website here, this blog just got a little too technie and needs some art :) I also need to update the header to my own. Yeah thats all for today :)]]></content:encoded>
      <wp:post_date>2007-08-03 09:08:21</wp:post_date>
      <wp:post_date_gmt>2007-08-03 16:08:21</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>massive-artwork-dump</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>
      <wp:comment>
        <wp:comment_id>3</wp:comment_id>
        <wp:comment_author>Lady0fFire</wp:comment_author>
        <wp:comment_date_gmt>2007-08-26 01:08:31</wp:comment_date_gmt>
        <wp:comment_date>2007-08-25 18:08:31</wp:comment_date>
        <wp:comment_approved>1</wp:comment_approved>>
        <wp:comment_content><![CDATA[Nice picture.]]></wp:comment_content>
      </wp:comment>

    </item>
    <item>
      <title><![CDATA[5 Unix CLI's You Can't Do Without]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1216882</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1216882#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1216882</guid>
      <pubDate>Sat, 4 Aug 2007 12:00:00 GMT</pubDate>
      <category domain="tag" nicename="coding"><![CDATA[coding]]></category><category domain="tag" nicename="linux"><![CDATA[Linux]]></category><category domain="tag" nicename="development"><![CDATA[development]]></category><category domain="tag" nicename="software"><![CDATA[software]]></category><category domain="tag" nicename="unix"><![CDATA[unix]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>17</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->In the world of wanting information faster, there is no faster way then going CLI. I recently melted my CPU and stuck with a laptop, but I am a web developer so I am the person with 10+tabs (Plus 4 browsers running), Eclipse, Pigeon (6 IM Services connected at once), and music playing. Well on my laptop I can&#39;t even get away with a browser with 10 tabs open, so I have to rework how I worked. Now thanks to these CLI&#39;s I can work faster without the lag of waiting for information to load.  <br/><br/><br/><span style="font-size: 160%"><strong>links2</strong></span><br/><br/>A text browser that supports cookies, javascript and tables. It does a hell of a good rendering job, downloading media, getting past all those ads for the vital information you search for!<br/><pre>	$ links2 myspace.com</pre><br/><br/><span style="font-size: 160%"><strong>mplayer</strong></span><br/><br/>Listen to music without the graphical interface, it can be a radio station, folder of music... you can even records the radio streams you listen to!<br/><pre>	$ mplayer /path/to/music.mp3
	$ mplayer /path/to/folder/*.mp3
	$ mplayer http://217.71.208.37:8006</pre><br/><br/><span style="font-size: 160%"><strong>pork</strong></span><br/><br/>AIM in a terminal, damn awesome!<br/><pre>	$ pork
	$ /connect username
	$ password: ___________
	&quot;Press tab to switch to the buddy list move up/down arrows and press enter to chat&quot;</pre><br/><br/><span style="font-size: 160%"><strong>vim</strong></span><br/><br/>If vim was a god I would believe in it.<br/><pre>	$ vim /path/to/file
	$ vim ftp://username@mysite.com//public_html/index.php
	$ password: ______________</pre><br/><br/><span style="font-size: 160%"><strong>ircII</strong></span><br/><br/>If you hate AIM then IRC all the way, I just wish names were colored and stuff. There are spin offs that use ircII as base-code but I felt like this should be mentioned anyways.<br/><pre>	$ ircII
	$ /SERVER irc.freenode.net
	$ /msg NickServ IDENTIFY mypassword
	$ /j #linux</pre>]]></content:encoded>
      <wp:post_date>2007-08-04 05:08:00</wp:post_date>
      <wp:post_date_gmt>2007-08-04 12:08:00</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>5-unix-cli-you-cant-do-without</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>
      <wp:comment>
        <wp:comment_id>4</wp:comment_id>
        <wp:comment_author>zomg</wp:comment_author>
        <wp:comment_date_gmt>2007-09-02 00:09:11</wp:comment_date_gmt>
        <wp:comment_date>2007-09-01 17:09:11</wp:comment_date>
        <wp:comment_approved>1</wp:comment_approved>>
        <wp:comment_content><![CDATA[I agree with all of these except ircII. <a href="http://www.irssi.org" target="_blank">Irssi</a> is so much better than ircII... compared to irssi, ircII is utter crap. =)<br/><br/>Irssi has the coloring you wanted, custom themes, Perl scripting, good support for UTF8, great interface... and much more. It even supports multiple &quot;windows&quot; although I never really liked that.<br/><br/>Oh, and you forgot to mention <a href="http://www.gnu.org/software/screen/" target="_blank">screen</a> ]]></wp:comment_content>
      </wp:comment>

    </item>
    <item>
      <title><![CDATA[Our complexity is through our obscurity.]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1230416</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1230416#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1230416</guid>
      <pubDate>Thu, 9 Aug 2007 02:41:16 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>18</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->	Your meaning to me is not fetched in fantasy but in the rendition of happiness.  This happiness is bound in the hope of a future in our presence. And yet this presence is the rope we shared, has been deeply cut, mainly by my own means, but I have no purpose in letting this rope break. Although a knot will fix the cut, it will forever show and for this I am truly sorry.<br/>	<br/>	My solitude is abut to whom I am, not meaning to corrosively bind my hidden emotions. The preemptive walls we meant for well being, keeping us harbored, have been tainted with belief in each other. And for that I am sorry. I am sorry for our uncertain future, our uncertain present and just the uncertainly uncertainness I have left your mind. For the things we have been through and for the things we will go through I am sorry.<br/><br/>An importance of apology to you,<br/>Joseph Montanez]]></content:encoded>
      <wp:post_date>2007-08-08 19:08:16</wp:post_date>
      <wp:post_date_gmt>2007-08-09 02:08:16</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>our-complexity-is-through-our-obscurity</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[AnimeReign Blogging Coming soon!]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1236980</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1236980#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1236980</guid>
      <pubDate>Sat, 11 Aug 2007 10:37:23 GMT</pubDate>
      <category domain="tag" nicename="anime"><![CDATA[anime]]></category><category domain="tag" nicename="development"><![CDATA[development]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>19</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><a href="http://files.myopera.com/sutabi/albums/252368/anime.png" target="_blank"><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/albums/252368/thumbs/anime.png_thumb.jpg' /></span></a> I am and have been think of adding the ability to allow people to post and host their own blogs on www.animereign.com. I have a lot of work todo, with adding anime themes and just changing the system to handle multiple admins using one set of files. Hopefully this project wont stall.]]></content:encoded>
      <wp:post_date>2007-08-11 03:08:23</wp:post_date>
      <wp:post_date_gmt>2007-08-11 10:08:23</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>animereign-blogging-coming-soon</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>
      <wp:comment>
        <wp:comment_id>5</wp:comment_id>
        <wp:comment_author>Lady0fFire</wp:comment_author>
        <wp:comment_date_gmt>2007-08-26 01:08:04</wp:comment_date_gmt>
        <wp:comment_date>2007-08-25 18:08:04</wp:comment_date>
        <wp:comment_approved>1</wp:comment_approved>>
        <wp:comment_content><![CDATA[Wow that sounds neat hon.]]></wp:comment_content>
      </wp:comment>

    </item>
    <item>
      <title><![CDATA[Php, Javascript, Json & Xml]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1449784</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1449784#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1449784</guid>
      <pubDate>Mon, 29 Oct 2007 04:31:19 GMT</pubDate>
      <category domain="tag" nicename="xml"><![CDATA[xml]]></category><category domain="tag" nicename="json"><![CDATA[json]]></category><category domain="tag" nicename="php"><![CDATA[php]]></category><category domain="tag" nicename="javascript"><![CDATA[javascript]]></category><category domain="tag" nicename="development"><![CDATA[development]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>20</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://farm1.static.flickr.com/32/35599128_64913e0668_m.jpg' /></span> <span style="font-size: 140%">T</span>his is just helpful tips to making you web apps run better. When you are sending data to the browser from php &amp; your server use JSON, but when you are sending data to your server from a browser you might get the idea that json would be idea? Wrong, although it will save you 15% data transfered, the overhead from Php decoding the JSON responce is far slower then using a Xml responce. The example below gave a whole 3 seconds difference between the xml vs json decoding.

Note: Requires Php 5
<pre>
&lt;?php
error_reporting(E_ALL | E_STRICT);
ini_set(&#39;display_errors&#39;, True);

$xml = &quot;&lt;?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&gt;
&lt;response&gt;
    &lt;status&gt;get_auth_token_ok&lt;/status&gt;
    &lt;auth_token&gt;9byo5bg8d2o3otp0voji0ej0v49bqcmo&lt;/auth_token&gt;
    &lt;user&gt;
        &lt;login&gt;stas@itscript.com&lt;/login&gt;
        &lt;email&gt;stas@itscript.com&lt;/email&gt;
        &lt;access_id&gt;453&lt;/access_id&gt;
        &lt;user_id&gt;453&lt;/user_id&gt;
        &lt;space_amount&gt;2147483648&lt;/space_amount&gt;
        &lt;space_used&gt;1024&lt;/space_used&gt;
    &lt;/user&gt;
&lt;/response&gt;&quot;;

$json = &quot;
{ 
    responce: {
        status: &#39;get_auth_token_ok&#39;,
        auth_token: &#39;9byo5bg8d2o3otp0voji0ej0v49bqcmo&#39;,
        user: {
            login: &#39;stas@itscript.com&#39;,
            email: &#39;stas@itscript.com&#39;,
            access_id: 453,
            user_id: 453,
            space_amount: 2147483648,
            space_used: 1024
        }
    }
}
&quot;;

$json = trimall($json);
$xml = trimall($xml);

$time_start = microtime(true);
$json_obj = json_decode($json);
$time_end = microtime(true);
$time = $time_end - $time_start;
echo &quot;Decoded JSON in $time seconds&lt;br&gt;&quot;;

$time_start = microtime(true);
$xml_obj = simplexml_load_string($xml);
$time_end = microtime(true);
$time = $time_end - $time_start;
echo &quot;Decoded XML in $time seconds\n&quot;;


function trimall($str, $charlist = &quot;\t\n\r\0\x0B&quot;)
{
  return str_replace(str_split($charlist), &#39;&#39;, $str);
}
?&gt;
</pre>]]></content:encoded>
      <wp:post_date>2007-10-28 21:10:19</wp:post_date>
      <wp:post_date_gmt>2007-10-29 04:10:19</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>php-javascript-json</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Javascript & A* Pathfinding]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1450838</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1450838#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1450838</guid>
      <pubDate>Mon, 29 Oct 2007 10:47:11 GMT</pubDate>
      <category domain="tag" nicename="mootools"><![CDATA[mootools]]></category><category domain="tag" nicename="programming"><![CDATA[programming]]></category><category domain="tag" nicename="javascript"><![CDATA[javascript]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>21</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/blog/Screenshot.png' /></span> <span style="font-size: 160%">T</span>his was just an old task I wanted to finish and that was to finally learn pathfinding correctly (A* that is). Dumped my old code and read an article on A* and after 5 months it all made since... not like I learned anything new about programming, just that I finally understood it. Its all done in javascript and I used mootools to help with html generation :P. Overall I am very happy I finally got around to this, I just wish I understood this before when I was working on the web client for a mmorpg.<br/><br/>Check it out: <a href="http://darkoria.labs.gorilla3d.com/pathfinder.php" target="_blank">http://darkoria.labs.gorilla3d.com/pathfinder.php</a><br/><br/>]]></content:encoded>
      <wp:post_date>2007-10-29 03:10:11</wp:post_date>
      <wp:post_date_gmt>2007-10-29 10:10:11</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>javascript</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Lonewolf programmer is really lone...]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/1526712</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/1526712#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-1526712</guid>
      <pubDate>Sat, 24 Nov 2007 07:02:45 GMT</pubDate>
      <category domain="tag" nicename="java"><![CDATA[java]]></category><category domain="tag" nicename="python"><![CDATA[python]]></category><category domain="tag" nicename="game-engine"><![CDATA[game engine]]></category><category domain="tag" nicename="lonewolf"><![CDATA[lonewolf]]></category><category domain="tag" nicename="programming"><![CDATA[programming]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>22</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgright'><img alt='' src='http://files.myopera.com/sutabi/blog/1Screenshot.png' /></span> Ok so I originally has this MMORPG game called darkcore, I did much of the artwork and my online friend wanted to help, she would do the writing. I started doing the artwork and 3d modeling and worked on the game in Blender 3D. The problem was network issues and it would have to be opensourced. So I said forget it lets do 2d, the whole point of this game is to make it accessable to almost everyone, small download, large game play. So I worked on the browser to create an ajax&#39;d game engine... Didn&#39;t go so well developing for Firefox, Opera, IE6 ... well okay it was going pretty good. I had a decent demo up in hope to finally recuit someone (a pixel artist). She wrote the story, I did the art and programming, and yet no one responded. Well they did, and very positive but no one joined. All those that was thinking about it sucked ass at graphics and just wanted to join for the hell of it.<br/><br/>The game idea died and so did the feeling of the friend too. She was upset I had given up, yet she failed to understand that for ever 1 hour she put into the game, 10 hours of mine went into it. So After months I finally got motivated again but this time work with a group of &quot;artists&quot; (different game), the problem was none of them could draw as well as I could and well let face it im a programmer. I offered to teach them with weekly meetups but that ended in was a pile of weapon art, no story and a few spells. I got a small game engine developed in python but before my breaking point, the engine was too slow and my team was falling apart because they wanted faster results. So yet Another attempted failed.<br/><br/>So here I am yet again, Java equiped and everything on my own. I developed the story, art and ported the game engine from python to Java. I&#39;ve written up a website, and web apps to help handle development tasks between team members. And in the end, I am all alone.]]></content:encoded>
      <wp:post_date>2007-11-23 23:11:45</wp:post_date>
      <wp:post_date_gmt>2007-11-24 07:11:45</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>lonewolf-programmer-is-really-lone</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>
      <wp:comment>
        <wp:comment_id>6</wp:comment_id>
        <wp:comment_author>Lady0fFire</wp:comment_author>
        <wp:comment_date_gmt>2008-03-01 19:03:35</wp:comment_date_gmt>
        <wp:comment_date>2008-03-01 11:03:35</wp:comment_date>
        <wp:comment_approved>1</wp:comment_approved>>
        <wp:comment_content><![CDATA[I AM HERE JOEY! I am! <br/>I will help in any way possible! <br/>Just tell me when you&#39;re going to be online.]]></wp:comment_content>
      </wp:comment>

    </item>
    <item>
      <title><![CDATA[Rhino vs Php Image Processing Faceoff ]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/22567932</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/22567932#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-22567932</guid>
      <pubDate>Sun, 28 Nov 2010 00:34:31 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>23</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->In php its a common task is scale images with GD, and much so with java&#39;s ImageIO. To interface with java I used rhino, which is a very loving javascript way to script the JVM. So I just took a folder of images, made a new folder called images and made 100x100 thumbnails.<br/><br/>Applications used:<br/>Php 5.3<br/>Java 1.6.0_14 &amp; Rhino 1.7 R2<br/><br/>Rhino:<br/>java -cp js.jar org.mozilla.javascript.tools.shell.Main index.js<br/><br/>Php:<br/>php -c /opt/lampp/etc/php.ini index.php<br/><br/>Result:<br/>Rhino: ~10.1 seconds @ 89 MB memory useage<br/>Php: ~7.3 seconds @ 38 MB memory useage<br/><br/>Now dont jump to the gun and think php is a much better fit. On larger images 13 megs in size php couldn&#39;t even open them, while the jvm took it like nothing and made virtually no dent in the time spent. So I tried adding 100 more images and the more images I added the the more php would take. After 150+ images rhino started to leave php in the dust while time it took to make thumbnails. While rhino has a lot of startup time, which is why its longer then php&#39;s time, it certainly will beat it with larger images, and more to process. Another aspect I left out of the demos was threading. Php has no real builtin threading, you have to fake it. While Rhino runs on the JVM and threading is dead simple. So I could cut the time down.<br/><br/>This really cuts into php&#39;s core, its hard to create more &quot;enterprise&quot; software because php isn&#39;t able to deal with these problems. Instead you need to create pecl modules to get around them. This is fine, but in rhino you can just create Java classes and use them. On a personal level its a LOT easier to create java classes for rhino then create c coded module for php. The other issue with php is deployment. But I will leave that for another day. <br/><pre>
function scaleImage(p_infile, p_outfile, p_width, p_height) {
    var file = new java.io.File(p_infile);
    var image = javax.imageio.ImageIO.read(file);
    var thumbWidth = p_width;
    var thumbHeight = p_height;        
 
    var thumbRatio = thumbWidth / thumbHeight;
    var imageWidth = image.getWidth(null);
    var imageHeight = image.getHeight(null);
    var imageRatio = imageWidth / imageHeight;
    
    if (thumbRatio &lt; imageRatio) {
      thumbHeight = (thumbWidth / imageRatio);
    } else {
      thumbWidth = (thumbHeight * imageRatio);
    }

    var thumbImage = new java.awt.image.BufferedImage(
        thumbWidth, 
        thumbHeight,
        java.awt.image.BufferedImage.TYPE_INT_RGB
    );
    var graphics2D = thumbImage.createGraphics();
    graphics2D.setRenderingHint(
        java.awt.RenderingHints.KEY_INTERPOLATION,
        java.awt.RenderingHints.VALUE_INTERPOLATION_BILINEAR
    );
    graphics2D.drawImage(image, 0, 0, thumbWidth, thumbHeight, null);
    javax.imageio.ImageIO.write(thumbImage, &#39;jpg&#39;, new java.io.File(p_outfile)); 
}

var directory = new java.io.File(&#39;./&#39;);
new java.io.File(&#39;./images&#39;).mkdir();

var filter = new java.io.FilenameFilter({
    accept: function(file, name) {
        name = name.toLowerCase();
        return !name.startsWith(&quot;.&quot;) &amp;&amp; (
        name.endsWith(&quot;.jpg&quot;) || name.endsWith(&quot;.jpeg&quot;) || 
        name.endsWith(&quot;.gif&quot;) ||  name.endsWith(&quot;.png&quot;)  &amp;&amp; 
        file.canRead() &amp;&amp; file.isFile()
        );
    }
});

var files = directory.listFiles(filter);
for each(var file in files) {
    var image = scaleImage(file, &#39;images/&#39; + file, 100, 100);
}
</pre><br/><br/><pre>
&lt;?php

function scaleImage($p_infile, $p_outfile, $p_width, $p_height) {
	$image = imagecreatefromjpeg($p_infile);
	if (!$image) {
		$image = imagecreatefrompng($p_infile);
	}
	
	$width = imagesx($image);    
	$height = imagesy($image);  
	$newwidth  = $p_width;
	$newheight = $height * $newwidth / $width;
	
	if($p_height &lt; $newheight) {
    	$newheight =&amp; $maxheight;
    	$newwidth  = $width * $newheight / $height;
	}
	if($p_width &lt; $newwidth) {
    	$newwidth  =&amp; $maxwidth;
    	$newheight = $height * $newwidth / $width;
	}
	
	$resampled = imagecreatetruecolor($newwidth, $newheight);
	imagecopyresampled($resampled, $image, 0, 0, 0, 0, $newwidth, $newheight, $width, $height); 
	imagejpeg($resampled, $p_outfile, 85);
	unset($resampled);
}

$files = scandir(&#39;./&#39;);

mkdir(&quot;images&quot;);
$filter = function ($file) {
    $file = strtolower($file);
    return (
        $file{0} !== &#39;.&#39; &amp;&amp;
        (
            substr($file, strlen($file) - strlen(&#39;.jpeg&#39;)) === &#39;.jpeg&#39; ||
            substr($file, strlen($file) - strlen(&#39;.jpg&#39;)) === &#39;.jpg&#39; ||
            substr($file, strlen($file) - strlen(&#39;.png&#39;)) === &#39;.png&#39; ||
            substr($file, strlen($file) - strlen(&#39;.gif&#39;)) === &#39;.gif&#39;
        )
    );
};

foreach ($files as $file) {
	if(!$filter($file)) {
	    continue;
	}
	scaleImage($file, &#39;images/&#39; . $file, 100, 100);
}
?&gt;
</pre>]]></content:encoded>
      <wp:post_date>2010-11-27 16:11:31</wp:post_date>
      <wp:post_date_gmt>2010-11-28 00:11:31</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>rhino-vs-php-image-processing-faceoff</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Putting the Java into Javascript With Rhino ]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/22568002</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/22568002#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-22568002</guid>
      <pubDate>Sun, 28 Nov 2010 00:35:27 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>24</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://gorilla3d.s3.amazonaws.com/v8/images/Picture%202.png' /></span><strong>Rhino</strong> uses the jvm to allow javascript to be embedded into java and for javascript to gain access to all those libraries java has. Much like using C to write extensions to PHP you can now use Java to write extensions to javascript. But in the interest of a Javascripter like me. I am just happy using the pure javascript. The source below is converted from java example, except its now in Javascript.<br/><br/><span style="font-size: 140%">smiley.js</span><br/><pre>
var awt = java.awt;
var event = awt.event;
var graphics = awt.Graphics;
var system = java.lang.System;
var smileyCanvas = new JavaAdapter(awt.Canvas, {
   paint: function (g) {
       var size = this.getSize();
       var d = Math.min(size.width, size.height);
       var ed = d / 20;
       var x = (size.width - d) / 2;
       var y = (size.height - d) / 2;
       // draw head (color already set to foreground)
       g.fillOval(x, y, d, d);
       g.setColor(awt.Color.black);
       g.drawOval(x, y, d, d);
       // draw eyes
       g.fillOval(x+d/3-(ed/2), y+d/3-(ed/2), ed, ed);
       g.fillOval(x+(2*(d/3))-(ed/2), y+d/3-(ed/2), ed, ed);
       //draw mouth
       g.drawArc(x+d/4, y+2*(d/5), d/2, d/3, 0, -180);
   }
});
smileyCanvas.setForeground(awt.Color.yellow);
var winAdapter = new JavaAdapter(event.WindowAdapter, {
   windowClosing: function (evt) {
       system.exit(0);
   }
});
var f = new awt.Frame(&#39;Have a nice day&#39;);
f.addWindowListener(winAdapter);
f.add(smileyCanvas, awt.BorderLayout.CENTER);
f.pack();
f.show();
f.setSize(new awt.Dimension(320, 240));
</pre><br/><br/><span style="font-size: 140%">Download Rhino</span><br/>You can grab js.jar from the mozilla site, <a href="http://www.mozilla.org/rhino/download.html" target="_blank">Mozilla Rhino</a>. When you extract the zip grab js.jar. and put it into the same directory as your javascript file i.e smiley.js.<br/><br/><span style="font-size: 140%">Compile your Javascript</span><br/>Now we will compile our script. In Dos or any Terminal go to the directory. If you are on windows go to Start-&gt;Run, and type &quot;cmd&quot; in the window or in Vista, type &quot;cmd&quot; in the search bar. Go to your direct with your js.jar and javascript file. <br/><pre>
&gt;&gt; cd C:\where-my-work-is\
&gt;&gt; java -cp js.jar org.mozilla.javascript.tools.shell.Main smiley.js;
</pre><br/><br/><span style="font-size: 140%">Importing Javascript Files</span><br/>Rhino includes javascript files by using the function load(). <br/><br/>// mylib.js<br/><pre>
var hello = function () {
     print(&#39;hi&#39;);
};
</pre><br/><br/>//Sample.js<br/><pre>
load(&#39;mylib.js&#39;) // Single File

hello();
</pre><br/><br/><span style="font-size: 140%">Using Java classes</span><br/>Using a java class is rather simple, but given that has long package paths I&#39;ve used <strong>importPackage</strong> to shorten them. <br/><pre>
importPackage(java.awt); 
var myColor = new Color(0.5, 0.5, 0.0);
// What are the rgb&#39;s ?
print(myColor);
// Let extend this
myColor.foo = function () {
     print(&#39;bar&#39;);
}
</pre><br/><br/>// ERROR Java class &quot;java.awt.Color&quot; has no public instance field or method named &quot;foo&quot;<br/><br/><span style="font-size: 140%">Extending Java <s>Classes</s> Objects</span><br/>Sadly if its a Java class and not a Javascript Object you cant add functions / prototype unless you use a JavaAdapter. Even then its not the class your extending its the Object. <br/><pre>
importPackage(java.awt); 
var object = JavaAdapter(java.lang.Object);
// Let extend this
object.value = []
object.toString = function () {
     return this.values.join(&#39;, &#39;);;
};
// or
var object = new JavaAdapter(Color, java.lang.Object, {
        values: [],
        toString: function () {
            return this.values.join(&#39;, &#39;);
        }
});
</pre><br/><br/><span style="font-size: 140%">Reusing Extended Java Objects</span><br/>Once an object is created you cant call the constructor <strong>new</strong> on that object, instead you&#39;ll receive an error about it not a function. So you can just wrap a function around the object. <br/><pre>
function JMArrayObject(arrayValues) {
    // the same as calling super()
    var object = JavaAdapter(java.lang.Object, {
        values: null,
        toString: function () {
            return this.values.join(&#39;, &#39;);
        }
    });
    // Do your constructor stuff here
    object.values = arrayValues;
    // return the object
    return object;
}

var ao = new JMArrayObject([0.75,0.5,0.5]);
print(ao);
// Output: 0.75, 0.5, 0.5
</pre><br/><br/><span style="font-size: 140%">Packaging your finished Product</span><br/>Because Rhino uses java you&#39;ll need to package <strong>Rhino</strong> with your script. You can compile your script in a .class (smiley.class) without the javascript source but you still need to package Rhino with it. <br/><span style="font-size: 140%">1) Extract the jar</span><br/>Open your terminal / console / shell, whatever and change the directory to it. Now type: <br/><pre>jar -xf js.jar</pre><br/>highlight:bash<br/><span style="font-size: 140%">2) Compile your Javascript</span><br/>Now we will compile our script. Type: <br/><pre>java org.mozilla.javascript.tools.jsc.Main -nosource -opt 9 -version 170 smiley.js;</pre><br/>-nosource removes the javascript source code to reduce filesize, -opt 9 sets maximum performance, and -version 170 just means use javascript 1.7 <br/><span style="font-size: 140%">3) Create a class loader</span><br/>If you downloaded the start file &quot;smile_step_1&quot; then take note. Create smiley.txt (filename doesn&#39;t matter) and inside smiley.txt type: <br/><pre>smiley</pre><br/>Note the extra line space in the file and whats above its needed. Also note that what ever you name your main javascript mush be used as the name above (case sensitive). <br/><br/><span style="font-size: 140%">Create the executable jar</span><br/>Next remove all files <strong>but not</strong> your compiled javascript class file (smiley.class), your .txt file with the class loader, and the &quot;org&quot; folder (as well as all of its contents inside). List should read: /smiley.class /smiley.txt /org/ Now type: <br/><pre>jar cmf smiley.txt smiley.jar *</pre><br/><br/><span style="font-size: 140%">Now Rejoice</span><br/>Yup you did it and on your way to putting the java into javascript. Be sure to join the Rhino News Group as well as Google Group. The more you support Rhino the more contributers will, well .... contribute!]]></content:encoded>
      <wp:post_date>2010-11-27 16:11:27</wp:post_date>
      <wp:post_date_gmt>2010-11-28 00:11:27</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>putting-the-java-into-javascript-with-rhino</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[DarkCore is commeth!]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/22766632</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/22766632#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-22766632</guid>
      <pubDate>Wed, 1 Dec 2010 14:43:13 GMT</pubDate>
      <category domain="tag" nicename="game-engine"><![CDATA[game engine]]></category><category domain="tag" nicename="ada"><![CDATA[ada]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>25</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/blog/IMG_20101201_055301.jpg' /></span> Upon playing minecraft my interests in game development has been sparked once more. Such a terrible looking game has so much praise which is awesome. I am not so interested in making a game then I am of making a game server. Given the status of HTML5 Web Sockets I think I will have a great way to bring a very light weight HTML5 Web Socket game server into play. The only true downfall is its fact thats its based on TCP sockets. The problem with TCP sockets are all packets fall in a single filed line. So if one packet is delayed they all are delayed.<br/><br/>So what is left on my plate is almost everything. My end goal is to make a game server that can blow minecraft&#39;s server&#39;s status out of the water. When I had attempted to run the server it requires 1 GB of memory, constant 25% - 100% CPU and 3 Mb out internet connection to host a 5 player game. I think that is utterly insane!<br/><br/>I have already chosen a language and started basic TCP socket and HTTP header parsing. Ada, is a Pascal like language, its not as quick to compile as Pascal or even faster then C or C++. However its a very clean language and shooting yourself in the foot is damn hard. If you are unaware of that context, then it has to do with memory management and more importantly pointers. The biggest benefit I see in Ada is concurrent real time programming. Its more then just threading, or forking your application. It levels the complexity of concurrent programming down its core language feature. With Ada, you choose what logic will be non-blocking, or blocking, you choose the critical tasks at hand and can pick which ones are most important. For any server is this unparalleled reason to adopt Ada.<br/><br/>So follow me at github: <a href="https://github.com/gorilla3d/DarkCore" target="_blank">https://github.com/gorilla3d/DarkCore</a><br/><br/>The code will be ugly, it will not be working, but it will be damn awesome and I will love it!]]></content:encoded>
      <wp:post_date>2010-12-01 06:12:13</wp:post_date>
      <wp:post_date_gmt>2010-12-01 14:12:13</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>darkcore-is-commeth</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Pixel Based Movement in a Tile Based World.]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/22938842</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/22938842#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-22938842</guid>
      <pubDate>Sun, 5 Dec 2010 17:57:38 GMT</pubDate>
      <category domain="tag" nicename="2d"><![CDATA[2d]]></category><category domain="tag" nicename="collision"><![CDATA[collision]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>26</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/blog/Screenshot-1.png' /></span> One of the biggest challenges of working on a web based client is dealing with the browsers. Upon choosing a method of rendering I am sticking with HTML5 canvas rather then depending on html elements. Also since most of the code will be in javascript, I will working with MooTools to help along with class based object oriented programming. So the first step is just to get the tiles to render based on an array map. I&#39;ve generated a tile map by hand to do some test work. The (green) grass is the tile index of one, where else the (blue) water is tile index zero. The tile index zero is not movable, as in it blocks the player. This will certainly change later on but this will serve as a simple blocking tile for now. <br/><pre>
    var map = [
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0],
    ];
    (function () {
        for (var x = 0; x &lt; map.length; x++) {
            for (var y = 0; y &lt; map[x].length; y++) {
                var tile = map[x][y];
                var img = new Image(32, 32);
                img.src = tile + &#39;.png&#39;;
                //-- Draw the Tile
                cxt.drawImage(img, x * 32, y * 32);
                //-- Draw the lines to visibly see tiles
                Darkcore.drawLine((x * 32), (y * 32), (x * 32) + 32, (y * 32));
                Darkcore.drawLine((x * 32), (y * 32), (x * 32), (y * 32) + 32);
            }
        }
        //-- Render the player after the tile
        player.render(cxt);
    }).periodical(50);
</pre><br/><br/><span style="font-size: 140%">Pixels to Tile</span><br/>Traditional with tile based movement, it&#39;s a one to one movement. You move left, you move an entire tile, however with pixel based movement it&#39;s not what tile your on, its what tiles you are on. The first step to getting the position is to get a ruff idea on what tile most of their body is on. In the example the I use pos[0] as x, and pos[1] as y, as the position of the object we are going to locate. So lets say the character is at (271 x-axis, 176 y-axis) pixels. Executing Darkcore.getTilePosition(271, 176) will return [8, 5]. So we can reference our map, map[8][5] to get the tile index, and hey its grass!<br/><br/><pre>
    Darkcore.getTilePosition = function (pos) {
        //-- We use a 32x32 tile for now
        var tileLength = 32;
        var tileHalf = tileLength / 2;
        
        var x = Math.round((pos[0] - tileHalf) / tileLength);
        var y = Math.round((pos[1] - tileHalf) / tileLength);
        
        return [x, y];
    }
</pre><br/><br/><span style="font-size: 140%">Box Collision Detection</span><br/>I&#39;ll keep this section short since this is very much overly covered topic. I used <a href="http://www.gamedev.net/reference/articles/article735.asp" target="_blank">Collision Detection by John Amato</a><br/><br/><pre>
    Darkcore.isBoxInBox = function (b1, b2) {
        var left1, left2;
        var right1, right2;
        var top1, top2;
        var bottom1, bottom2;
            
        left1 = b1.x;
        left2 = b2.x;
        right1 = b1.x + b1.w;
        right2 = b2.x + b2.w;
        top1 = b1.y;
        top2 = b2.y;
        bottom1 = b1.y + b1.h;
        bottom2 = b2.y + b2.h;

        if (bottom1 &lt; top2) return false;
        if (top1 &gt; bottom2) return false;

        if (right1 &lt; left2) return false;
        if (left1 &gt; right2) return false;

        return true;

    }
</pre><br/><br/><span style="font-size: 140%">Getting the surround tiles?</span><br/>When you get the object&#39;s tile position you&#39;re going to need to expand the object&#39;s based with a radius of one extra tile around it. That means getting the top left, top center, top right, center center, etc... The code below diagrams the thought process.<br/><br/><pre>
         _____    __________________
        |_|_|_|  |-1,_-1|0,_-1|1,_-1|
        |_|_|_|  |-1,_ 0|0,_ 0|1,_ 0|
        |_|_|_|  |-1,_ 1|0,_ 1|1,_ 1|

        var pos = Darkcore.getTilePosition(player.pos);
        var x = pos[0] * 32;
        var y = pos[1] * 32;
        
        //-- Top Row
        var topLeft        = [x - 32,y - 32];
        var topCenter      = [x,     y - 32];
        var topRight       = [x + 32,y - 32];
        //-- Center Row
        var centerLeft     = [x - 32,y];
        var centerCenter   = [x     ,y];
        var centerRight    = [x + 32,y];
        //-- Bottom Row
        var bottomLeft     = [x - 32,y + 32];
        var bottomCenter   = [x     ,y + 32];
        var bottomRight    = [x + 32,y + 32];
</pre><br/><br/><span style="font-size: 140%">Is the Object Blocked?</span><br/>Once you are able to figure out the coordinates of each surrounding tile, its then processing all nine tiles against a collision test from the object. Next we find out the tiles that the object is touching we then process the tileId&#39;s to find out if there a zero index tile (water), which is blocked. This will prevent the object from moving.<br/><br/><pre>
    Darkcore.isBlocked = function (player) {
        var pos = Darkcore.getTilePosition(player.pos);
        var x = pos[0] * 32;
        var y = pos[1] * 32;
        
        //-- Top Row
        var topLeft        = [x - 32,y - 32];
        var topCenter      = [x,     y - 32];
        var topRight       = [x + 32,y - 32];
        //-- Center Row
        var centerLeft     = [x - 32,y];
        var centerCenter   = [x     ,y];
        var centerRight    = [x + 32,y];
        //-- Bottom Row
        var bottomLeft     = [x - 32,y + 32];
        var bottomCenter   = [x     ,y + 32];
        var bottomRight    = [x + 32,y + 32];
        
        //-- Get the bound box of each tile
        var tiles = [
            //-- Top Row
            Darkcore.getBoundingBox(topLeft, 16),
            Darkcore.getBoundingBox(topCenter, 16),
            Darkcore.getBoundingBox(topRight, 16),
            //-- Center Row
            Darkcore.getBoundingBox(centerLeft, 16),
            Darkcore.getBoundingBox(centerCenter, 16),
            Darkcore.getBoundingBox(centerRight, 16),
            //-- Bottom Row
            Darkcore.getBoundingBox(bottomLeft, 16),
            Darkcore.getBoundingBox(bottomCenter, 16),
            Darkcore.getBoundingBox(bottomRight, 16)
        ];
        
        //-- I have to reduce the object&#39;s size by one or else it touches 
        // everything.
        bb0 = Darkcore.getBoundingBox(player.pos, 15);
        
        //-- Iterate through the tiles and check against the object
        var hits = [];
        for (var i = 0; i &lt; tiles.length; i++) {
            var tile = tiles[i];
            if (Darkcore.isBoxInBox(bb0,tile)) {
                hits.push(tile);
            }
        }
        
        //-- Iterate through the hits and check for zero index tileId
        for(var i = 0; i &lt; hits.length; i++) {
            var hitPos = [hits[i].x, hits[i].y];
            var tilePos = Darkcore.getTilePosition(hitPos);
            var tileId = Darkcore.getTile({
                pos: hitPos
            });
            //-- If the tile index is zero, it water, there for blocked!
            if(tileId === 0) {
                return true;
            }
        }
        
        return false;
    }
</pre><br/><br/><span style="font-size: 140%">Putting it all together</span><br/>Okay so now we know how to find the location of the object given their pixel location. We know what tiles they are touching, and we also know if any of those tiles they are touching are blocked tiles. So before we can really move the object we need to test their next move to see if it is blocked. Them move function is an embedded function of the player class, so I&#39;ve create an excerpt. This adds the x / y modifications of the players position and tests it to see if they player can really move their in the first place. If it is true then assigns the modified x / y to the player.<br/><br/><pre>
        move: function (x, y) {
            var tileId, tilePos, modX, modY, modChar, halfSize, pos;
            
            halfSize = this.size / 2;
            
            pos = [this.pos[0], this.pos[1]];
            
            modX = pos[0];
            modY = pos[1];
            if(x != 0) {
                modX = pos[0] + x;
            }
            if(y != 0) {
                modY = pos[1] + y;
            }
    
            modChar = {
                pos: [modX, modY]
            };
            
            //-- If the mob is not running into a blocked item, really do move 
            // them!
            if(!Darkcore.isBlocked(modChar)) {
                this.pos[0] += x;
                this.pos[1] += y;
            }
        }

    $(window).addEvent(&#39;keydown&#39;, function (evt) {
        if(evt.key === &#39;right&#39;) {
            player.move(4, 0);
            evt.stop();
        } else if(evt.key === &#39;left&#39;) {
            player.move(-4, 0);
            evt.stop();
        } else if(evt.key === &#39;up&#39;) {
            player.move(0, -4);
            evt.stop();
        } else if(evt.key === &#39;down&#39;) {
            player.move(0, 4);
            evt.stop();
        }
    });
</pre><br/><br/><span style="font-size: 140%">The Working Example</span><br/>The blog post is base upon my git repository located at <a href="https://github.com/gorilla3d/DarkCore/tree/cc5a0afef52e34eb35b694dd17e37c0c30874094" target="_blank">DarkCore at Github</a>.]]></content:encoded>
      <wp:post_date>2010-12-05 09:12:38</wp:post_date>
      <wp:post_date_gmt>2010-12-05 17:12:38</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>pixel-based-movement-in-a-tile-based-world</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Php, Memcache, BInary Packing and Shared Memory]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/30204592</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/30204592#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-30204592</guid>
      <pubDate>Sun, 15 May 2011 08:02:34 GMT</pubDate>
      <category domain="tag" nicename="php"><![CDATA[php]]></category><category domain="tag" nicename="binary"><![CDATA[binary]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>27</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->The last few days I have been trying to cobble technologies to get a working mmorpg in PHP. This is not a web app game, you know with html / css / javascript / ajax + php, but rather GTK and sockets. The hardest part I have come across is understanding you cannot use threads in PHP. So you need to rely on multiple processes. The issues with multiple processes is communication, its damn hard. Threads make communication easy and is a great reason to use threads versus forking a process. With that, no matter what you do unless you can find a way to communicate with the processes your out of luck for development.<br/><br/>When I first tried to deploy my map in my client side game, it became apparent that I had a problem. A simple 512 x 512 map took a while to generate, about 7 minutes. On top of that it took a LOT of memory. However once everything was in place I was able to get about 300,000+ events in a second. Meaning I could move 300,000+ objects in my map in less then one second. The issue with this was it was all in one process. When you toss a GUI (Gtk), World Simulator, and Sockets needing to all work without blocking each other it becomes impossible. <br/><br/>So I decided to move my map to Memcached. This made the map generation take about 30 minutes, way too long. I also tried to see how many objects I could move in a second and it was about 1,700+. Thats a huge performance hit, meaning there was no way I was going to continue on with Memcached.<br/><br/>In reality I just need to share my memory with my other processes, but to do this you cannot have Php Objects. So my natural option is serialize my Php Objects. I tried to push each map coordinate stack to a share memory segment. However that turned out to be a stupid idea. Shared memory (Shmop) has a limit to how many share memory blocks you can have open. What does this mean? There is no real way I can access a coordinate without serializing the ENTIRE map. There is no way I can do that...<br/><br/>This make me think about my own database I made and why fixed variables is the only option to making large datasets accessible in small chucks. Php has pack and unpack, this can be used to read a fixed size of data like a serialized C structures. I.E<br/><br/><span style="font-size: 140%">C Example of Serializing a Structure</span><br/><pre>
struct {
    unsigned short x;
    unsigned short y;
    unsigned short tileId;
}
file_record rec = {0, 0, 32};
FILE *fp = fopen(&quot;map.txt&quot;,&quot;w&quot;);
fwrite(&amp;rec, sizeof(rec), 1, fp);
</pre><br/><br/>In Php, you can pack/unpack these into an array. Its not as elegant as a C program, but it works. So with that in mind I can build out an array of tiles with coordinate. Each tile will have an x, y, tile id and objects inside of itself. The $x variable will be an unsigned integer (meaning no larger then 65,535 coordinate). This is large enough for my own use. The $y and tile id will follow the same structure. An unsigned integer is 2 bytes, so altogether the first 6 bytes are the coordinates and tile type.<br/><br/><span style="font-size: 140%">Example of a 64 x 64 Binary Map Generation using Pack in PHP</span> <br/><pre>
&lt;?php
/*
  Tile 48 bits | 6 bytes
  S | 16 bits | 2 bytes | x-axis  [0 - 65,535]
  S | 16 bits | 2 bytes | y-axis  [0 - 65,535]
  S | 16 bits | 2 bytes | tile-id [0 - 65,535]
    16 Objects | 4352 bits | 544 bytes
    cccccccccccccccccccccccccccccccc | 256 bits | 32 bytes | Object Name
    S                                | 16 bits  | 2 bytes  | Object Type
*/

$binarymap = &#39;&#39;;
for ($x = 0; $x &lt; 64; $x++) {
    for ($y = 0; $y &lt; 64; $y++) {
        $binarymap .= pack(&quot;SSS&quot;, $x, $y, 32);
        for($i = 0; $i &lt; 16; $i++) {
            $name = str_pad(&quot;This is a test&quot;, 32, &quot; &quot;);
            
            $binarymap .= pack(&quot;c32S&quot;, 
                $name[0], $name[1], $name[2], $name[3], $name[4], $name[5],
                $name[6], $name[7], $name[8], $name[9], $name[10], $name[11],
                $name[12], $name[13], $name[14], $name[15], $name[16], $name[17],
                $name[18], $name[19], $name[20], $name[21], $name[22], $name[23],
                $name[24], $name[25], $name[26], $name[27], $name[28], $name[29],
                $name[30], $name[31], 
                rand(0, 65535)
            );
        }
    }
}
?&gt;
</pre><br/><br/>The next issue to tackle is how to gain random access to a tile. If you have noticed, these tiles are place in a horizontal pattern. Meaning I can&#39;t go, $data[$x][$y], now give me access. For this I fall back to how SDL (Simple DirectMedia Layer - A cross-platform multimedia library designed to provide fast access to the graphics framebuffer and audio device.) forces you to gain access to a random pixel given the x and y axis. In SDL you have to find out the pitch (width of an image) and size of a pixel (indexed, rgb, or rgba) to be able to calculate where in the flat array you can access the pixel information. To bring this back to how we will access a tile in PHP, we will have to know the &quot;pitch&quot; of the map. Because I have a footprint to follow, I know that the width of the map is 64 (pitch) and every tile is 550 bytes. This is extremely easy to gain access now.<br/><br/><span style="font-size: 140%">Unpacking a binary structure in PHP</span><br/><pre>
$x = 1;
$y = 1;
$pitch = 64; // The map extends to 64
$sizeof = 550; // Each tile is 550 bytes for now
$coord = (($y * $pitch) + $x) * $sizeof; // Where in the flat array is this tile?
$data = substr($binarymap, $coord, 6); // The first 6 bytes of binary data (x, y, id)
list($tileX, $tileY, $tileId) = array_values(unpack(&quot;S3&quot;, $data)); // Unpack the three unsigned integers hence &quot;S3&quot;
</pre><br/><br/>Now only need one shared memory block, not 4000+ blocks. I can also read an object just as fast. However its very unmaintainable. Every byte must be calculated, if I every change the map format I need to write a migration script. There is nothing I can really do about this, but its a start. Even better is that I can move this generation to a C application making the understanding of the map structure much more sane and a hell of a lot more faster.<br/><br/>Till next time! ]]></content:encoded>
      <wp:post_date>2011-05-15 01:05:34</wp:post_date>
      <wp:post_date_gmt>2011-05-15 08:05:34</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>php-game-dev-log-00</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Php on Windows is ...]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/30233072</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/30233072#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-30233072</guid>
      <pubDate>Mon, 16 May 2011 07:07:28 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>28</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->From my last post I found that depending on Memcached for fast memory access across multiple processes was a bad idea. So then I began to moved my work towards the php module <strong>shmop</strong>. Using in-processor memory I was able to up to process 300,000 events, while Memcached let me process 1,000-3,000 events. So now what did shmop yield? Well Considering I had to move to a binary format, and then depending on <span style='text-decoration:underline'>deseralization</span> using pack / unpack php calls I get about 35,000+ events per second. Its not the 300,000 I was hoping for but the bottle neck is now CPU bound. So what do you do when the cpu becomes an issue? Well use a CPU with multiple cores! Multiple processes means you can now use multiple cores. Also since its using shared memory, its not bound by a single process. So If I spawn more then one world simulator on a 4 core system and then I could process up to 140,000 events per second.<br/><br/><span style="font-size: 140%">Issues with Php on Windows</span><br/><br/>This was a huge disappointment, all the speed you get from linux doesn&#39;t transfer over with Windows. This is also true for <strong>Php GTK</strong> and <strong>Shmop</strong>. Php GTK Fullscreen redraws where about 10 frames a second versus the 30 FPS I got on Linux. As for shmop, I tried on a Window laptop so this might be the reason for this, but I hit about 1,000 (versus 35,000) events before the CPU would max out. Considering most people will only be running the game clients on Windows this isn&#39;t too bad. However Php Gtk will have to have some hard core dirty rect calcutions. Dirty Rect is a term used in 2D games where you find what areas of the screen to redraw, rather then redrawing the entire screen. Anyways onto the last issue with PHP on Windows, pcntl DOESN&#39;T WORK ON WINDOWS!!! Gosh this is a big blow I think... I can revert to using a windows shell script to run the processes by themselves. If I completely ignore windows as an OS to run the server on, then I can get away with using Php GTK to run the threads via <strong>Gtk::timeout_add</strong><br/><br/><span style="font-size: 140%">Php on Wine 1.3</span><br/><br/>Wine is a program used to run Windows applications on Linux. Its awesome stuff, even better when you can test PHP on there as to running back and forth between machines for Windows testing. However I will note shmop does not work on Wine, I get &quot;<strong>fixme:msvcrt:MSVCRT__sopen_s : pmode 0x01b6 ignored</strong>&quot; Which results in me unable to write to memory.<br/><br/><span style="font-size: 140%">Php GTK Running on Php 5.3 and Windows</span><br/><br/>The last issue I ran into was finding a version of Php-GTK that worked on Php 5.3 for windows. There is just some random link <a href="http://php-gtk.eu/en/apps/php-gtk-installer-for-windows" target="_blank">http://php-gtk.eu/en/apps/php-gtk-installer-for-windows</a> that has Php 5.3 and GTK working together, wasn&#39;t the easiest thing to come across.]]></content:encoded>
      <wp:post_date>2011-05-16 00:05:28</wp:post_date>
      <wp:post_date_gmt>2011-05-16 07:05:28</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>php-on-windows-is</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Multidimensional Arrays in C++ for a tilemap in SFML]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/30709862</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/30709862#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-30709862</guid>
      <pubDate>Mon, 30 May 2011 07:15:40 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>29</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->To understand this tutorial to must first know the basics of vectors in c++ and how to use <a href="http://www.sfml-dev.org/" target="_blank">SFML</a>.<br/><br/><span style="font-size: 140%">The Basics - Defining the Map</span><br/><br/>First lets invasion a 4x4 tile map. Each box will hold the tile ID, which is basically saying, &quot;This box is grass&quot;, or &quot;This box is water&quot;.<br/><br/><pre> _______
|_|_|_|_|
|_|_|_|_|
|_|_|_|_|
|_|_|_|_|
</pre><br/><br/>Now lets see how this works in C++. In C++ you can dynamically initialize the entire multidimensional array. However you cannot initialize each row dynamically unless you enable your compiler&#39;s support for c++0x. Not all compiler support &quot;extended initializer lists&quot;.<br/><br/><pre>int map[4][4] = {
    {0, 0, 0, 0}, // &lt;-- There are 4 columns per row, and 4 rows
    {0, 0, 0, 0},
    {0, 0, 0, 0},
    {0, 0, 0, 0}
}; // This works

int map[4][4];
map[0] = {0, 0, 0, 0}; // Fails unless you use enable c++0x support in your C++ compiler
</pre><br/><br/>You can also used C++&#39;s standard vector library. I feel the use of vectors are a bit more easier to deal with when you want to access your map indexes. C++ vectors give you better tools to know the limits of your map before accessing an index of the map. Hence less likely to have your application crash. To used multidimentional vectors, you have to use a very type heavy syntax.<br/><br/><pre>
// much like &quot;int map[4][4];&quot;
std::vector&lt; std::vector&lt;int&gt; &gt; map(4, std::vector&lt;int&gt;(4));
map[0][0] = 0;
map[0][1] = 0;
// ... 

// If you want to use the same initialization as the previous example 
// you will have to enable c++0x  

// !!! NOTE !!!
// Using the format below will fail because &gt;&gt; in C++ means something
// different
// std::vector&lt;std::vector&lt;int&gt;&gt; map(4, std::vector&lt;int&gt;(4));
</pre><br/><br/><span style="font-size: 140%">How to Access Multidimensional Indexes - Ermm Map Tiles</span><br/><br/>So lets stick with vectors for now. They are a bit more complicate to initialize but doing this forces you to understand how arrays look in a programming language.<br/><br/>Remember our map?<br/><pre> _______
|_|_|_|_|
|_|_|_|_|
|_|_|_|_|
|_|_|_|_|
</pre><br/><br/>Can you tell me where 2,3 is? Well look at the map, down 2, left 3. <br/><pre> _______
|_|_|_|_|
|_|_|X|_|
|_|_|_|_|
|_|_|_|_|
</pre><br/><br/>Well how do you access that tile (2,3) in C++? Even more so while using vectors?<br/><pre>
int tileId = map[1][2]; // This is not a typo it really is [1][2], read below!
// Or
int tileId = map.at(1).at(2);
</pre><br/><br/>Well that makes since right? Not really, this is because zero (0) has a size in C++. So zero (0) is really the first index, not one (1).<br/><br/><span style="font-size: 140%">How to Iterate aka &quot;Array Walk&quot; your map</span><br/><br/>Because we are using vectors you&#39;d be tempted to use the vector iterator, but because we are using a complex vector array, its much better off to not use them. So instead we will use a regular for loop for the X and Y based tiles in the map. Since the map uses vectors we can get the size of each vector dynamically.<br/><br/><pre>    std::vector&lt; std::vector&lt;int&gt; &gt; map(4, std::vector&lt;int&gt;(4));
    // Define the map
    map[0][0] = 0;
    map[0][1] = 1;
    map[0][2] = 0;
    map[0][3] = 0;
    map[1][0] = 0;
    map[1][1] = 0;
    map[1][2] = 0;
    map[1][3] = 0;
    map[2][0] = 0;
    map[2][1] = 0;
    map[2][2] = 0;
    map[2][3] = 0;
    map[3][0] = 0;
    map[3][1] = 0;
    map[3][2] = 0;
    map[3][3] = 1;
    
    
    for (int x = 0; x &lt; map.size(); x++) {
        for (int y = 0; y &lt; map[x].size(); y++) {
            int tileId = map[x][y];
            std::cout &lt;&lt; tileId &lt;&lt; &quot;\n&quot;;
        }
    }</pre><br/><br/><br/><span style="font-size: 140%">Slapping SFML into the mix</span><br/><br/>Before we start I will have you use a startup file to have SFML setup with out basic map and a grass / water tile to be loaded.<br/><br/><a class="attach" href="http://files.myopera.com/sutabi/blog/sfml-tilemap.zip" target="_blank">Tutorial-01.zip</a><br/><br/>First lets load our images and setup sprites for them. Those zeros and ones will now have meaning to them. At these lines just below <strong>line 29</strong> <span style='text-decoration:underline'>sf::RenderWindow App(sf::VideoMode(640, 480, 32), &quot;SFML TileMap&quot;);</span><br/><pre>
    sf::RenderWindow App(sf::VideoMode(640, 480, 32), &quot;SFML TileMap&quot;);

    // Load the images from files
    std::vector&lt;sf::Image&gt; images(2); // Preset the vector to 2 images
    if (!images[0].LoadFromFile(&quot;grass.png&quot;)) {
        return EXIT_FAILURE;
    }
    if (!images[1].LoadFromFile(&quot;water.png&quot;)) {
        return EXIT_FAILURE;
    }

    // Create the sprite
    std::vector&lt;sf::Sprite&gt; tiles(2); // Preset the vector to 2 sprites
    tiles[0] = sf::Sprite(images[0]); // Grass
    tiles[1] = sf::Sprite(images[1]); // Water</pre><br/><br/>Now if you notice tiles[0] and tiles[1], the 0 and 1 are what we used in the map! Next we take our map walk over it and associate it to these sprites. Locate <strong>App.Clear</strong>, just below that we have our array walk happening. Go ahead and compile the code below and see the what happens.<br/><br/><pre>
        for (int x = 0; x &lt; map.size (); x++) {
            for (int y = 0; y &lt; map[x].size (); y++) {
                int tileId = map[x][y];
                App.Draw(tiles[tileId]); // Add this like ... WE DRAW TILES YAY
                std::cout &lt;&lt; tileId &lt;&lt; &quot;\n&quot;;
            }
        }</pre><br/><br/><span class='imgcenter'><img alt='' src='http://files.myopera.com/sutabi/blog/snap1.png' /></span><br/><br/>Uhh wait they are just showing up as one water tile, what gives? Well its because the position each tile needs to be set before drawing. So lets give it a try. Assign the x and y coordinates from the map as the position of the tile. Now compile again and see the result. <br/><br/><pre>        for (int x = 0; x &lt; map.size (); x++) {
            for (int y = 0; y &lt; map[x].size (); y++) {
                int tileId = map[x][y];
                
                tiles[tileId].SetPosition(x, y);
                App.Draw(tiles[tileId]);
                std::cout &lt;&lt; tileId &lt;&lt; &quot;\n&quot;;
            }
        }</pre><br/><br/><span class='imgcenter'><img alt='' src='http://files.myopera.com/sutabi/blog/snap2.png' /></span> <br/><br/>Ok well you see some grass? I think... Well thats for good reason, we only push the tile over 1 pixel. Since the x and y variables are represented as 1 pixel, we will have to use the width and height of each sprite&#39;s image to get the right result.<br/><br/>So lets go back to or example of find out the coordinate (2,3).<br/><br/><pre> _______
|_|_|_|_|
|_|_|X|_|
|_|_|_|_|
|_|_|_|_|
</pre><br/><br/>To find the number of pixels we need to push the tile over to draw in the right spot we need a constant width and height. So if each tile is 32 pixels wide and 32 pixels tall, then when you get to the 2nd tile down whats your starting position? Think for a second, the 2nd tile was really &quot;1&quot; in the map index. map[1] = 2nd tile down, with that you know that its going to start at 32 pixels, not 64 pixels, on the x-axis. What about the y-axis? Well again that 3rd tile was really &quot;2&quot;. So again map[1][2] = (2,3). So this time is 2 tiles down, 32 + 32 pixels = 64 pixel. So x = 32, y = 64... Now put on your thinking cap, if we start at zero, want to render the 3rd tile and its really 2 tiles over, then you get the formula y_pixels = 32 * y (the maps y in the for loop).<br/><br/><pre>
        for (int x = 0; x &lt; map.size (); x++) {
            for (int y = 0; y &lt; map[x].size (); y++) {
                int tileId = map[x][y];
                // Get the tile&#39;s image
                const sf::Image* image = tiles[tileId].GetImage();
                // Get the width and height of the image
                int width = image-&gt;GetWidth();
                int height = image-&gt;GetHeight();
                // Adjust the offset by using the width
                tiles[tileId].SetPosition(x * width, y * height);
                // Draw the tile
                App.Draw(tiles[tileId]);
            }
        }</pre><br/> <br/>So go ahead and compile the example see what you get!<br/><br/><span class='imgcenter'><img alt='' src='http://files.myopera.com/sutabi/blog/snap3.png' /></span> <br/><br/>If all else fails, then I have the entire tutorial source below:<br/><a class="attach" href="http://files.myopera.com/sutabi/blog/sfml-tilemap2.zip" target="_blank">sfml-tilemap2.zip</a><br/><br/>You can also view the source online:<br/><a href="https://gist.github.com/998540" target="_blank">https://gist.github.com/998540</a><br/><br/>]]></content:encoded>
      <wp:post_date>2011-05-30 00:05:40</wp:post_date>
      <wp:post_date_gmt>2011-05-30 07:05:40</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>uusing-multidimensional-arrays-in-c-for-a-tilemap-in-sfml</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[How the language Vala can speed up development time frames. ]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/30912122</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/30912122#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-30912122</guid>
      <pubDate>Sat, 4 Jun 2011 17:28:02 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>30</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->First off Vala is a language that is very much like C#. It does have some oddities and missing features, but other then that the syntax isn&#39;t so different. Vala is a language that compiles to C code, not to virtual machine byte code. This is not a new concept and there has been a few translation languages before, Haxe (ActionScript 3 like), ShedSkin (Python), Hiphop (Php). However they all push towards C++ and has a high level of abstraction to support the dynamic typing in those languages.<br/><br/>Vala does have a level of abstraction, however is in C code, not C++ and its based on gobject. GObject is a cross platform library to help C developers code in sane object oriented fashion. There are a lot projects that use gobject so its not some middle-ware that no one would be willing to used along side your c generated code. Given that, Vala&#39;s C code, can be used in any project that is okay with accessing the object with the Gobject interface. It can produces headers and libraries making a solid bridge between any language that supports Gobject. This includes,  C++, Java, Ruby, Python, Php, Lisp, .Net/Mono .<br/><br/><span style="font-size: 140%">What makes Vala so great?</span><br/><br/>Vala is fast. Object allocation is its weaker spot and this is due to Gobject, but its very close to a pure C implementation. It you are looking to get around the same speed, you&#39;d need to write it &quot;c-like&quot;, this is no different if in the event of using a language like C++.<br/><br/>Vala is safer then C. You can still get segment faults and crashes, but the likeness of getting memory corruption is very small.<br/><br/>Vala is cross-platform, the very basics of Vala works on Linux and Windows, I haven&#39;t tested Mac OSX, but there are reports it works on there as well. As long as you use cross platform libraries with it, then it can also work.<br/><br/>Vala can use C. Vala has what&#39;s called VAPI, a wrapper around c headers to make calling C functions &quot;pretty&quot; and &quot;Like Vala!&quot;.<br/><br/>C can use Vala, like I said before the middle wear is gobject, but its a proven way to allow C developers gain the benefits of many features that are hard to implement in C code.<br/><br/>Vala is like C#, which is better then Java. Vala has much less boilerplate for certain language features compared to C#.<br/><br/><span style="font-size: 140%">What makes Vala not so great?</span><br/><br/>Vala&#39;s toolset is lacking. IDE support kind of sucks, the most you get is auto-complete and syntax highlighting.<br/><br/>Vala&#39;s compiler is not great at forcing you to be safe. Because its tied so closely to C I don&#39;t know how close they can get.<br/><br/>Vala&#39;s debugger doesn&#39;t exist. You have to look at the c code it generates to find out where it might be happening. So in result you have to use a C debugger to find the bad C code. What Vala outputs as far as C is concern is still readable, so its not impossible or even that hard, just a pain when you manage to crash Vala.<br/><br/>Its a new look at old ways. Vala doesn’t invent anything new, items like concurrency, distributed system programming, these are things that C can do with the right libraries, but its not easy, and not any easier in Vala.<br/><br/>Conclusion <br/><br/>Support, there is the mailing list, but that really is only avenue to support. There isn’t 30 years of resource behind this language. Given that if you choose Vala, make sure you understand the languages and its limits on every platform, before picking it as the de facto language to program in. In short, Vala is a great tool to use. My productivity while using Vala, is alongside programming in PHP. Using it on the Linux/GNU Operating system is the best way to use this language. GUIs, Games, even Web Services are perfect examples of Vala, as long as your okay with staying on Linux/GNU. Given that I have been using Vala on windows as well, its still workable, but getting libraries to link is a seemingly impossible task. Once that huddle is done, its really not that bad.<br/>]]></content:encoded>
      <wp:post_date>2011-06-04 10:06:02</wp:post_date>
      <wp:post_date_gmt>2011-06-04 17:06:02</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>how-the-language-vala-can-speed-up-development-time-frames</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Real-time Programming with Ada and Python]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/31761212</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/31761212#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-31761212</guid>
      <pubDate>Tue, 28 Jun 2011 19:50:25 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>31</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span style="font-size: 160%">Using Ada or Python for realtime programming</span><br/><br/>Real-time programming is nothing more then using threads, multiple processes, multiple cores, even distributed systems to run your application with. It breaks the bound of being locked into a single loop, blocking event, and in the end, scaling out. Once you start to get into these concepts it becomes extremely hard to manage your code. But this has real world value, if you think of a video game, the logic, graphics, sound, and networking are all in their threaded or even separate processes running concurrently. The same is true for even simple GUI applications. The context of real-time programming might be a scary concept but believe it or not, you probably already do it, or use software like databases that utilize it.<br/><br/>Now, there are several languages that are designed with concurrency in mind, like Ada, Haskell, Scala, and Erlang (i might have forgotten a few I know). However any language that can incorporate multiple threads, or processes, can accomplish this. With that python is one language that has started to embrace real-time programming more and more with every new release. Its also the language I fell in love with. As for Ada, its a language that was developed for the Military, required to be a safe, faultless language. Its probably the only statically typed language I&#39;ve never had to use a debugger with, its also one of the most verbose languages I know. Another big feature is this entire topic is built into Ada as &quot;Tasks&quot;. This means its not come library you import, its really built into the syntax of the language.<br/><br/><span style="font-size: 140%">The Benchmark</span><br/><br/>Before I start to go into the code, I&#39;ll do ahead and put relevance into this subject. I took the a set of big numbers and just iterated 0 through them and multiplying them by themselves. As expected python is much slower by a factor of 10x. Large loops are the weakest points of any dynamic languages. Ada executed at 0.5 seconds while Python executed at 22 seconds, certainly a huge difference.<br/><br/>Output:<br/><pre>
Python (CPython 3.2): 42.54 user 0.22 system 0:22.62 elapsed 188% CPU
Ada (Gnat 4.4.5)    :  0.84 user 0.02 system 0:00.51 elapsed 168% CPU
</pre><br/><br/><span style="font-size: 140%">Tasks in Ada</span><br/><br/>Every task in Ada has a specification and a body, these can be defined in the same file or separated files. Think of it like your defining a thread, except in Ada is typed. Here is the general idea:<br/><pre>
   -- The Specification
   task type Run_Loop is
      entry Start (Max_Number : Long_Long_Integer);
      entry Result (Return_Value : out Long_Long_Integer);
   end Run_Loop;
</pre><br/><br/>Each entry in a task is just a procedure, it can never return a value, but it can handle writing out to a variable. There is no limit on entry and they are named very well. An entry allows you to &quot;enter&quot; into a task at a given position. However once a task has been entered (that&#39;s what she said), it then must wait until that entry has finished or has a select options. Many time there will be a loop for each entry with a select option, that way if you want to stop the task you can do so. Given that Ada takes the position where it provides a basic framework for concurrency and its up to you to use them well. This might seem bad, but really there are only 6-7 keywords you need to learn before you can master Ada tasking.<br/><br/>Now before I go into a bit of depth of how to dig your hand into concurrency, I&#39;ll just lay the code on the table.<br/><br/><span style="font-size: 140%">Use The Source</span><br/><a href="https://gist.github.com/1048607" target="_blank">Ada and Python Source Code</a><br/>Ada Code:<br/><pre>
with Ada.Text_IO;
with Ada.Calendar;
with GNAT.Calendar.Time_IO;
with Ada.Strings;
with Ada.Strings.Fixed;

procedure Main is
   type Max_Number_List is array (Positive range &lt;&gt;) of Long_Long_Integer;
   Max_Number : Long_Long_Integer := 0;
   Max_Numbers : Max_Number_List := (
       10000000, 10000000, 10000000, 10000000, 10000000
   );

   task type Run_Loop is
      entry Start (Max_Number : Long_Long_Integer);
      entry Result (Return_Value : out Long_Long_Integer);
   end Run_Loop;

   task body Run_Loop is
      Current_Time : Ada.Calendar.Time;
      Last_Number : Long_Long_Integer := 0;
   begin
      accept Start (Max_Number : Long_Long_Integer);
      Current_Time := Ada.Calendar.Clock;
      Ada.Text_IO.Put_Line (&quot;Started: &quot; &amp; GNAT.Calendar.Time_IO.Image (
         Current_Time, &quot;%Y-%m-%d %T.%e&quot;
      ) &amp; Long_Long_Integer&#39;Image (Max_Number));
      for I in 1 .. Max_Number loop
         Last_Number := I * I;
      end loop;

      accept Result (Return_Value : out Long_Long_Integer) do
         Return_Value := Last_Number;
      end Result;
   end Run_Loop;

   Run_Loop_Tasks : array (Max_Numbers&#39;Range) of Run_Loop;
   Last_Number : Long_Long_Integer;
begin
   for Max_Number_Index in Max_Numbers&#39;Range loop
      Max_Number := Max_Numbers (Max_Number_Index);
      Run_Loop_Tasks (Max_Number_Index).Start (Max_Number);
   end loop;
   Ada.Text_IO.Put_Line (&quot;All are started!&quot;);
   for Max_Number_Index in Max_Numbers&#39;Range loop
      Max_Number := Max_Numbers (Max_Number_Index);
      Run_Loop_Tasks (Max_Number_Index).Result (Last_Number);
      Ada.Text_IO.Put_Line (
         Ada.Strings.Fixed.Trim (
            Long_Long_Integer&#39;Image (Max_Number), Ada.Strings.Left
         ) &amp; &quot; ran for&quot; &amp;
         Long_Long_Integer&#39;Image (Last_Number)
      );
   end loop;
end Main;
</pre><br/><br/>Python Code<br/><pre>
import concurrent.futures
import urllib.request
import time
import datetime

max_numbers = [10000000, 10000000, 10000000, 10000000, 10000000]

def run_loop(max_number):
    print(&quot;Started:&quot;, datetime.datetime.now(), max_number)
    last_number = 0;
    for i in range(1, max_number + 1):
        last_number = i * i
    return last_number

def main():
    with concurrent.futures.ProcessPoolExecutor(max_workers=len(max_numbers)) as executor:
        future_to_url = {}
        for max_number in max_numbers:
            future_to_url[executor.submit(run_loop, max_number)] = max_number
        
        for future in concurrent.futures.as_completed(future_to_url):
            number = future_to_url[future]
            if future.exception() is not None:
                print(&#39;%r generated an exception: %s&#39; % (number,
                                                         future.exception()))
            else:
                print(&#39;%r ran for %d&#39; % (number, future.result()))
     
 
if __name__ == &#39;__main__&#39;:
    main()
</pre><br/><br/><span style="font-size: 140%">Use of timeouts</span><br/><br/>Python&#39;s concurrent module does support timeouts, and of course timeouts are supported in Ada. In the case of Python I was able to get timeout to work properly. Yes exceptions would raise about the time exceeding, but it did not stop the execution. So until I find a solution I&#39;ll skip the use of timeouts of python.<br/><br/>Ada&#39;s approach is again built into the language. To be continued...<br/><br/>]]></content:encoded>
      <wp:post_date>2011-06-28 12:06:25</wp:post_date>
      <wp:post_date_gmt>2011-06-28 19:06:25</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>real-time-programming-with-ada-and-python</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[How Scala can "Lift" the web.]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/32555682</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/32555682#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-32555682</guid>
      <pubDate>Mon, 18 Jul 2011 20:16:17 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>32</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->What is Scala?<br/>Scala just another language, only a few years old and already its getting a lot of interests. Its built on Java which has proven to be successful with its Java Virtual Machine. What makes scala so great is its ability to be lazy. You don&#39;t have to use the type system to define your variables / values. The types are determined by what they are evaluated to. Example val foo = &quot;bar&quot; will result in a string. This isn&#39;t a new idea, ;languages like Haskel, C++x0, Vala, C#, etc have them as well. Scala can be coded in the styles of Java-like or Haskel-like. Making it very appealing to a lot of developers. However its ability to do functional programming makes Scala very power language.<br/><br/>So how can it lift the web?<br/><br/>There are a lot of web technologies that make up a web application. As to how it can lift the web is much based on the &quot;Lift&quot; framework. Lift is based on view first, which at the company I work at is what we base our own php framework on. We realise its unacceptable to have allow a designer to mock up a website in out own framework. They shouldn&#39;t have to deal with routes, redirect, or server configurations. However Lift takes this even a step further by removing logic from its template system. So conditionals and loops, are performed mainly by &quot;snippets&quot;. This gives <br/>]]></content:encoded>
      <wp:post_date>2011-07-18 13:07:17</wp:post_date>
      <wp:post_date_gmt>2011-07-18 20:07:17</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>how-scala-can-lift-the-web</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[The use of static languages in web applications]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/32911062</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/32911062#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-32911062</guid>
      <pubDate>Tue, 26 Jul 2011 02:14:11 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>33</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->As a PHP developer, the notion of rapid application programming is a given. This is why dynamic languages must be used in web applications. However it leads me to wish statically typed languages would have an interpreted mode. Oh wait some do...<br/><br/><span style="font-size: 140%">Haskell</span><br/><br/>Haskell is a weird beast. Its a lazy, functional and strong typed language. It can be ran just like a dynamic language can, or compiled to an executable. The biggest benefit to me is its inferred type system. You don&#39;t have to constantly define the type of every variable.<br/><br/>PHP has both (sort of) via Facebook&#39;s HipHop (still dynamic typing)<br/>Python has both (sort of) via Shed Skin (really only works on smaller applications, and very limited)<br/><br/>]]></content:encoded>
      <wp:post_date>2011-07-25 19:07:11</wp:post_date>
      <wp:post_date_gmt>2011-07-26 02:07:11</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>the-use-of-static-languages-in-web-applications</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[But does it scale?]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/32924632</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/32924632#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-32924632</guid>
      <pubDate>Tue, 26 Jul 2011 02:59:43 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>34</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->I am starting get annoyed at the notion of scaling. First off anyone saying putting anything Amazon will scale automatically is just a dumb person. There are two issues with scaling, data (sessions, database anything) and the file system (file uploads). You are more likely needing to scale your database first, then web servers, which triggers the OS file system needing to scale. <br/><br/><span style="font-size: 140%">Scale Scale Scale, oh I mean horizontal scaling!</span><br/><br/>The cheapest way to scale is vertical scaling, aka buying a more powerful machine. This works fairly well, but with one big draw back, which is a single point of failure. If any part of the machine&#39;s hardware dies out the entire web application is in deep trouble. However, much of the development time is saved and can be focused on building a better application. This also doesn&#39;t require scaling dev ops to manager the massive amounts of server.<br/><br/>So if vertical scaling is cheaper why does everyone want horizontal scaling? Well at some point your going to hit a brick wall. The cost of bandwidth, or power consumption may be too much for one machine. I can tell you now, unless you get big, the only thing you&#39;d scale horizontally is the database. Which is why there is so much hype behind NoSQL.<br/><br/><span style="font-size: 140%">NoSQL is Web Scale</span><br/><br/><br/>]]></content:encoded>
      <wp:post_date>2011-07-25 19:07:43</wp:post_date>
      <wp:post_date_gmt>2011-07-26 02:07:43</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>but-does-it-scale</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Choosing a Language for High Performance Web Development]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/33735042</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/33735042#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-33735042</guid>
      <pubDate>Mon, 8 Aug 2011 08:27:15 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>35</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span style="font-size: 140%">Performance</span><br/><br/><strong>Haskell Snap</strong> - Snap can take on a high load, but its system limited. By default the max number of file descriptor on my linux system is 1024, which is the max number of concurrent connections Snap can handle. Once you go over Snap will crash. There are ways around this, the can edit the C files needed, recompile and have something like 60,000 connections. Given that I was extremely impress with its speed, and memory usage. I did run into weird delay issues, as in they would not happen when installing the development compile on the fly version of my apps.<br/><br/><strong>Scala Lift</strong> - Its running on the JVM meaning it can take a pounding, and still accept connections, while serving 200 responses. It performed a lot slower then Snap, but it wouldn’t stop. However the memory usage kept climbing up and up and up. After the benchmark was done, it stayed at that memory level, which was every nook and cranny the system had. Other then that it could handle more then 1024 connections.<br/><br/><strong>Ada Aws</strong> - This really depends on who you choose to program your application. If program your app like most web apps, take a request in, compute, server then you won’t get too far with performance when dealing with a high connection rate. However if you take in a request, and quickly return the connection as taken, then the high connection rate isn’t a problem anymore. However you then need to write the responses using Ada’s tasking system, which can take a little getting use to. The end result is it can be a lot faster then snap, but you have to put a lot more effort into it. Other then that I wasn’t able to go beyond 1016 concurrent connections, which is the same issue with Snap.<br/><br/><span style="font-size: 140%">Can it Comet?</span><br/><br/><strong>Haskell Snap</strong> - No, but by default it serves as chucked data, which is how comet data is served. Snap is still a very new library and its ability to comet can certainly happen, its just not built yet.<br/><br/><strong>Scala Lift </strong>- Yup. It uses an actor model to work. Even better is how you get to write it. For the most part Lift will write the html, and javascript needed. All you need to do is write the scala code. It might seem like bliss but it takes a while to even get use to actors in scala. Its code is very condense so as soon as you want to do something different it takes a some creative thinking before executing.<br/><br/><strong>Ada Aws</strong> - Yup. It uses Ada’s built in tasks and their Push package. Each Push object can have many subscribers, which is no different then Lift, but how you write them really is. The draw back with AWS is that you also have to write the html and javascript by hand. <br/><br/><span style="font-size: 140%">Productivity</span><br/><br/>This will go to Snap right off the back. The time it takes with Lift, even with using JRebel on a quad core system is about 5-7 seconds. Snap reloads instantly and on the page load. Ada on the other hand, is about the same time to recompile and reload the webserver. The only different is your doing that by yourself. I am sure I could right a tool to make that automatic.you have to stop the server, and restart it. AWS is by far the least productive one.<br/><br/><span style="font-size: 140%">Template Language</span><br/><br/>All of these let you use any other template language. Snap steals a lot of the ideas from Lift, while AWS is really off the wall. For the most part all of these have logic-less template languages, preventing templates from looking like tag soup (ermm php). AWS does have if / if else / else, but that’s it. From a designer’s standpoint Lift is probably the best to deal with.<br/><br/><span style="font-size: 140%">Language Power</span><br/><br/>All three of these languages have a small community, yet are very powerful. This is really bias as my choice is in Ada, but Haskell and Scala are both amazing languages. Ada and Haskell has a fairly small library set. However they can use any C library by wrapping them with some Ada/Haskell code. Ada is the fastest and lowest memory footprint language of them all, but the amount of code you have to write is just ridiculous, its more then any other language out there. <br/><br/><strong>Haskell</strong> - Its a functional language, it doesn’t have mutable types (values that change over time) minus IO which is a weird way to get around that issue. Its very condensed, every character has deep meaning. Over all its functional aspect isn’t what sold me. What did sell me was it rich data structures, amazing type inference, and pattern matching is just magical. You save so much time because your not writing useless characters like brackets or semicolons and because the resulting code base is very small, the error rate you’d hit would be a lot lower. Lastly the fact it can be interpreted or compiled to a binary file.<br/><br/><strong>Scala</strong> - Its everything Haskell is and more. It can be like java if you wanted, but you’d be dumb to do that. It can also use every Java library out there. However it took me learning Haskell to really understand the power of Scala. Until your forced to write in a functional way your benefit from Scala will be limited. Scala’s community is sky rocketing and extremely reactive.<br/><br/><strong>Ada</strong> - Ada is a blocks style language. Its extremely verbose making it about the most readable languages I know. Also Gnat the compiler is one of the best compilers I’ve used. I’ve yet had a reason used the debugger. Any crash that does happen actually tells you what went wrong. Sadly Ada has about the weakest community of them all. Really the best thing about Ada for me is its real time and concurrency features, as its built into the language.<br/><br/><span style="font-size: 140%">My Decision</span><br/><br/>In the end I picked Ada AWS. Haskell Snap would be my next choice. Scala’s Lift is amazing and safe but it really got in my way. I don’t mean limited in the sense of features, but rather along the lines of Django. It’s a very very high level library, so wanting to start at a lower level means you have to understand the in’s and out’s of Lift’s libraries first. On top of that I’m using a server with a limited amount of memory. AWS and Snap both fit in that range, not Scala. If I had the time to learn Lift, I’d go with lift anyways. It feels a little like Google Web Toolkit, but much more leaned back and lot less push on using their GUI, right now Lift really only does the menu for you.]]></content:encoded>
      <wp:post_date>2011-08-08 01:08:15</wp:post_date>
      <wp:post_date_gmt>2011-08-08 08:08:15</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>choosing-a-language-for-high-performance-web-development</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Some IRC people are just plain unhelpful]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/34108652</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/34108652#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-34108652</guid>
      <pubDate>Tue, 16 Aug 2011 14:27:06 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>36</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Yeah no surprise right? Well recently I&#39;ve notice a lot of people who want to be the enlightener. So rather then answering your question, they tell you, &quot;You&#39;re asking the wrong question&quot; or even better &quot;Why do you want to do that&quot;. Even after a more then justifiable answer, their response is anything but helpful. They want you to answer yourself in the form of a question. Making you understand that what you want is wrong. Whats even better is they couldn&#39;t even answer your question in the first place.<br/><br/>This really goes along the line of give a man a fish feed him for a day, or teach him to fish and feed him for life. The problem with that is its more like: You have a flat tire on your bicycle and just need to learn how to fix a flat so you can keep on going. You just need to get it fixed because your trying to write a solution to a problem. So instead of someone teaching you how to fix the flat, they are telling you: &quot;You should never need to fix a flat. Instead your riding your bike wrong.&quot;<br/><br/>To those people you suck, for wasting my time and the bytes its taken for this rant. Get off your high horse and stop thinking everyone is at your level of understanding you. Everyone needs to start somewhere and sometimes it takes the wrong place to become better. <br/><br/>Then again maybe it does take worthless holes in this world to motivate people to push themselves. After all why would I even be writing this dump post?]]></content:encoded>
      <wp:post_date>2011-08-16 07:08:06</wp:post_date>
      <wp:post_date_gmt>2011-08-16 14:08:06</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>some-irc-people-are-just-plain-unhelpful</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>
      <wp:comment>
        <wp:comment_id>7</wp:comment_id>
        <wp:comment_author>markalves</wp:comment_author>
        <wp:comment_date_gmt>2011-08-17 06:08:58</wp:comment_date_gmt>
        <wp:comment_date>2011-08-16 23:08:58</wp:comment_date>
        <wp:comment_approved>1</wp:comment_approved>>
        <wp:comment_content><![CDATA[Selfishness comes and goes along way. I thought IRC people were just zombies. Thanks for the enlightenment. :wait: ]]></wp:comment_content>
      </wp:comment>

    </item>
    <item>
      <title><![CDATA[Simple Microsecond Timers in Vala]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/34225712</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/34225712#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-34225712</guid>
      <pubDate>Fri, 19 Aug 2011 04:53:12 GMT</pubDate>
      <category domain="tag" nicename="vala"><![CDATA[Vala]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>37</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span style="font-size: 140%">Using TimeVal</span><br/><br/>There are a few ways to produce a time. Some include seconds, some include <i>microseconds</i> (μ). For me I&#39;d rather use the built-in methods. <strong>TimeVal</strong> is apart of the <strong>GLib</strong> library. <strong>TimeVal</strong>, when initialized it will grab the current timestamp automatically. Respectively the results are able to yield <i>microseconds</i> as a hole number. For more information about TimeVal visit <a href="http://valadoc.org/references/glib-2.0/0.11.5/GLib.TimeVal.html" target="_blank">Valadoc&#39;s &quot;TimeVal&quot;</a><br/><br/><pre>// Initialize the time
var start_time = new TimeVal ();
var time = start_time.tv_sec + (start_time.tv_usec * 0.000001);
// Do things here
...
// Figure out how long it took...
var end_time = new TimeVal ();
time = end_time.tv_sec + (end_time.tv_usec * 0.000001) - time;

// Print out our time
print (&quot;Work took &quot; + time.to_string () + &quot; seconds&quot;);
// Or
printerr (&quot;Work took %f seconds&quot;, time);
// Or
print (@&quot;Work took $time seconds&quot;);</pre><br/><br/><span style="font-size: 140%">A Better Way with Timer</span><br/><br/><strong>Timer</strong> is also built in and a lot more sensible when try to accomplish a stop watch. If you need to pause, continue and get the time between all of it then <strong>Timer</strong> is a much better choice. Timer is also apart of <strong>GLib</strong>. The output yield <i>microseconds</i> in a decimal format. For more information about Timer visit <a href="http://valadoc.org/references/glib-2.0/0.11.5/GLib.Timer.html" target="_blank">Valadoc&#39;s &quot;Timer&quot;</a><br/><br/><pre>// Initialize the Timer
var time = new Timer();
time.start ();

// Do Work
...

time.stop ();
/ Print out our time
print (&quot;Work took &quot; + time.elapsed ().to_string () + &quot; seconds&quot;);
// Or
printerr (&quot;Work took %f seconds&quot;, time.elapsed ());</pre>]]></content:encoded>
      <wp:post_date>2011-08-18 21:08:12</wp:post_date>
      <wp:post_date_gmt>2011-08-19 04:08:12</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>simple-microsecond-timers-in-vala</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Archos 28 Internet Tablet Review]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/35300742</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/35300742#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-35300742</guid>
      <pubDate>Fri, 16 Sep 2011 20:02:19 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>38</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Overall<br/><br/>Its a great MP3/MP4 player, however its almost unusable as an internet tablet. If you want more internet tablet ability, choose the Archos 32.<br/><br/>The Ideal Usage<br/><br/>This is great for music, light internet browsing and light gaming, and then the ever so often watching videos. It does a great job at streaming and integration into your existing UPnP or Samba servers (i.e windows media center).<br/><br/>The Screen (3 out of 10)<br/><br/>Its a damn small screen, and I have decent sized fingers. So typing with my fingers is hard even in landscape. However this is a resistive screen, so I can use any object. I found the back of a pencil (the eraser) is perfect. So although its hard to type with my fingers, navigation is far easier and faster then my capacitive MyTouch. I say this because trying to do fast motions with your finger is hard given the friction. The screen is sunken in so it a little hard touch the right place all the time depending on the angle. On top of that the brightness on this display is not that great, the colors are washed out, and are not vivid. The last part is text readability ... It seems the screen resolution is mushed, and I say that because the fonts are not strong, its seems a little blurred. Lastly the resistive screen has sporadic motions. So something as simple as scroll down a page can have a random jump to the very top, the same goes for type, certain keys will be pressed when your finger was not even close to it. This normally happens when you are doing very fast motions, out tap the screen in different places quickly.<br/><br/>The Battery Life (5 out of 10)<br/><br/>It says 4 hours for video, that&#39;s 4 hours in 50% light display, and wifi disabled. Other then that its 2 hours, so a long single movie. Not bad, the 16 hours for audio is more then enough for me.<br/><br/>Audio (7 out of 10)<br/><br/>The 3.5mm head jack can deliver very loud sounds. The audio recorder is very decent, it performs better I expected.<br/><br/>Internet Browsing (2 out of 10)<br/><br/>The browser is very impressive, speedy and fluid. However complex websites will crash the browser. It does support flash, but this will also crash the browser if its too complex. This is all because of the very low RAM and buffer allocated. Overall the I would not even want to use the browser, it crashed way too much. As a work around I can say Opera Mini makes a perfect replacement, however not every website looks correct, or is accessible compared to the stock browser.<br/><br/>Video (4 out of 10)<br/><br/>It says it can play DVD quality videos. This is sometimes the case. The audio may be out of sync, or it will buffer the a certain percent and just stop there. If you play lower resolution videos like 320x480 then everything works perfectly. The colors are washed out and not very bright so don&#39;t expect much on this end.<br/><br/><br/>]]></content:encoded>
      <wp:post_date>2011-09-16 13:09:19</wp:post_date>
      <wp:post_date_gmt>2011-09-16 20:09:19</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>archos-28-internet-tablet-review</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Moving from T-Mobile to Sprint]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/36760622</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/36760622#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-36760622</guid>
      <pubDate>Fri, 21 Oct 2011 04:45:37 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>39</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->I have been with T-Mobile for the last three years. My decision to move to Sprint, has been primarily based on the iPhone availability. They both offer the same costs for family plan into phones however Sprint does offer an unlimited option. For my understanding Sprint is a much larger company when I had moved over i expected a faster Internet speed for my 3G data. I turned out to not really be the case however moving away from T-Mobile did cost me each of my phones you know I have been with them for three years was $200 each so to cancel my plan I now have to pay $400 plus $160 for my next month that won&#39;t even be using. Most providers will actually discount the cancellation fee if you&#39;ve have that phone for an exceedingly amount of time. Beyond that I&#39;ve been actually pretty happy with Sprint minus their average 3G speeds it&#39;s actually on par with T mobile. need to benefit with Sprint is that never actually been tossed onto the edge network. I have always had it least 1 to 2 to 3G bars and most the time I have 3 to 5 3G bars]]></content:encoded>
      <wp:post_date>2011-10-20 21:10:37</wp:post_date>
      <wp:post_date_gmt>2011-10-21 04:10:37</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name></wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Why choose NodeJs / RingoJS over PHP]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/37509032</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/37509032#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-37509032</guid>
      <pubDate>Sun, 13 Nov 2011 01:44:46 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>40</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->I&#39;ve tried a LOT of other languages for web development. Its become apparent that a web application, or more importantly a web service will be the glue that holds together a company. I&#39;ve used PHP for over 6 years, pushing the language into areas it wasn&#39;t designed for. The issues I have been running into for the last 6 years has to do with client side development. At this point minus php GTK, you have to deal with a browser. That browser will have javascript. That javascript will have a lot of overlapping code. However that code is different because its in another language. For example, form validation will need to be written in JavaScript (client side) and in PHP (server side) for security and accessibility reasons. There are a few ways around this. First off you could use something like Zend Forms with Dojo. This Library will save you from writing the javascript part, but there cost is complexity. The average programmer, will not be able to move quickly from the start. Second, you could use a php to javascript transcoder. A transcoder will convert PHP into javascript, so if you&#39;ve used Coffeescript, then your using a transcoder. Transcoders can save you a lot of time, however unless you know the environment, it will put you in debug hell. Third use another language that also use transcoders. Pascal and Haxe are both languages that can produce PHP and Javascript. They give you static programming which helps a lot in not making stupid mistake. However you do move even further from the platform, making it hard to debug.<br/><br/>So far I&#39;ve mainly describe how to avoid writing javascript. Its not that the language is a bad one, but its use in server side development has never been a great one. The tools that are in a language like PHP are far better then javascript. So yeah I should share a common ground with code as long as I can use the same programming language in both the client and server side, but I lose efficiency with not have the libraries I need.<br/><br/>NodeJS<br/><br/>NodeJS just keeps getting better. Its recent release adds Windows support, and clustering. I&#39;ve used this in a recent project for one main reason. My team knows javascript and we needed to write apart of a web application&#39;s functionality to meet a higher scale of connections. The downside is that my ability to share code between the browser and nodejs was limited to passing JSON objects. Making the statement that you can reuse a lot of code is not really helpful. There is a lot of abstraction that needs to happen before it can be useful. For example, it would be perfect to just write SQL in the browser that will produce an ajax call to the server to execute. That same client code can be moved into the server and be smart enough to not have an ajax call. The same with image editing, dom parsing, etc. These higher level activities become really hard to share between the client and server. Its almost stupid to think we have to really program like this. That browser, should be the server too and NodeJS is making it easier, but really just think about it. An online game will most likely use the same language for the client it makes and the server it runs on. So if the server is C++, then the client will be C++.<br/><br/>Ringo JS<br/><br/>The only reason I want to bring up Ringo is because there is a big problem with NodeJS. NodeJS can be helpful for larger scaled applications but an event loop is flawed (how nodejs works). The way you have to write an application is completely different, since everything needs to be asynchronous.  For a server its deadly to lock your only process to serve one client. Now you might think, well in the browser its been working fine, but the browser is only ever wanting to do one to two actions at a time. So you can afford blocking actions. The server maybe processing over 1,000 actions.<br/><br/>So where Ringo falls into the picture is the ability to normalize programming. You can gain the speed needed write applications faster, without investing the frustrations and extra work of asynchronous programming. Ringo lets you make the mistakes, since they can always be fixed later. ]]></content:encoded>
      <wp:post_date>2011-11-12 17:11:46</wp:post_date>
      <wp:post_date_gmt>2011-11-13 01:11:46</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>why-choose-nodejs-ringojs-over-php</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Free Pascal Templates / Generics / Containers]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/38119452</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/38119452#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-38119452</guid>
      <pubDate>Tue, 29 Nov 2011 05:17:54 GMT</pubDate>
      <category domain="tag" nicename="programming"><![CDATA[programming]]></category><category domain="tag" nicename="pascal"><![CDATA[pascal]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>41</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->No matter what you want to call them Free Pascal has had them since 2.2, before Embarcadero&#39;s Delphi compiler had them. Creating your own generics in Free Pascal can be a bit cumbersome especially when you just want a container to use. So FPC has created the FGL unit that has the basics to get real work done. Here is an example:<br/><br/><pre>
{ Compile with &quot;fpc list.pas&quot; }
program list;

{ fgl contains the templates we need. }
uses
	fgl;

{ We have to create a type using the template }
Type  
	TIntegerList = specialize TFPGList&lt;Integer&gt;;

var
	{ Now we have a list container! }
	NumberList : TIntegerList;
	I, Item : Integer;
begin
	I := 1;
	{ Create the List }
	NumberList := TIntegerList.Create;

	{ Add some stuff to the List }
	NumberList.Add(I);
	NumberList.Add(23);

	{ Iterate through the list }
	for Item in NumberList do
	begin
		WriteLn(&#39;Item: &#39;, Item);
	end;

	{ Destroy the List }
	NumberList.Destroy;
end.
</pre>]]></content:encoded>
      <wp:post_date>2011-11-28 21:11:54</wp:post_date>
      <wp:post_date_gmt>2011-11-29 05:11:54</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>free-pascal-templates-generics-containers</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[The GuruPlug Server]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/38420342</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/38420342#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-38420342</guid>
      <pubDate>Mon, 12 Dec 2011 22:01:41 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>42</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span style="font-size: 140%">The After Thought</span><br/><br/>I&#39;ve been keeping my eye on this device for some time. Mainly for the use of a small portable web server. Well a client from my job also became interest after I mentioned it several times. Fly past 8 months and it becomes more apparent that this tiny device would become much more important. So the product came to my desk and for the first time in a while I was excited to be working on a project again. The packaging for this thing is amazing, clean and just $100 dollars.<br/><br/><span style="font-size: 140%">The Specs</span><br/><br/>Now I can&#39;t say what this device is being used for, but its capabilities are great. A netbook, 1.6 Ghz is usually hyper threaded into 800 Mhz simulated processors. Even at that speed you&#39;re able to do a lot. This plug, Guruplug Server (Standard) comes with 1GHZ arm cortex-m8, 512MB RAM and really that&#39;s all you need to know. In electronics getting your hands on those specs at that price is amazing. Go shop around for a SBC (Single Board Computer) and see how hard it is to meet that price point, much less the specs. I&#39;ve read that they could be cheaper, but really $100 is a great starting point.<br/><br/><span style="font-size: 140%">Documentation</span><br/><br/>Setup was a little ruff, since its documentation a tiny booklet saying go to their website. That isn&#39;t so bad, I mean why waste paper? However when you go to their website it then goes onto Google Projects, which has a PDF. The PDF is a helpful but not complete. If they could make it easier to get too and more complete, then I&#39;d be much happier.<br/><br/><span style="font-size: 140%">Connecting</span><br/><br/>Connecting to the device was dead easy. If you have a laptop, connect to the plug&#39;s wifi (it broadcasts it own wifi signal!). Then go the the website <a href="http://192.168.1.1/" target="_blank">http://192.168.1.1/</a> . It then has a guide and setup links to do what you&#39;d want. Its setup for 5 primary tasks, web server, print server, file storage (i.e windows networked), wifi broadcaster, and something else that I can&#39;t remember. All that is very easy, until you want to develop on the device. <br/><br/><span style="font-size: 140%">Developing On</span><br/><br/>GuruPlug is an ARM Debian based distro, easy to use if you&#39;ve used ubuntu. However the repository links are broken. Its unclear how to even get your ethernet coord to provide internet to this box, to even try to fix the repository links. So you search the web, and find out how to, however its clearly not in the documentation. It should say:<br/><br/>1) ssh root@192.168.1.1 (password is nosoup4u)<br/>2) dhclient -r (plus some dhcp conf editing)<br/>3) apt-get update<br/>4) Enjoy...<br/><br/>However it never talks about sftp, ssh or dealing with dhcp.<br/><br/><span style="font-size: 140%">Customer Support</span><br/><br/>Its never always about the product. Their support, by my experience is about 1 business day. Its not too shabby, however their technical responses are limited. I think its fine for when the devices die, but if your stuck on an issue you know will need someone that is truly need something more then a sales person then your probably better off going to the plug forum. <br/><br/><span style="font-size: 140%">Bring on the Heat</span><br/><br/>I&#39;ve read a lot of complaints about the heat issues. However unless you plan to be running this device at 100% utilization with a gigabit connection, then I wouldn&#39;t worry. I was compiling a project for over 2 hours and this device did start to get really warm and the plastic did smell a little. So just be warned and read up on the ways to work around this if you do experience it.<br/><br/><span style="font-size: 140%">In Closing</span><br/><br/>I think for this is perfect for prototyping / hacking an embedded arm device software. Building software with real hardware could not be easier. However there is a big threat out there. If you think about android its running on very cheap arm devices. Android isn&#39;t the biggest selling point, but the hardware its being sold with. Of course its not a walk in the park like the Guruplug is, but to have a device that is portable, is a big win. You can buy a cheap Chinese android tablet for almost the same price with most of the specs minus Bluetooth. The biggest huddle is learning the android way. If not then learning how to flash the device with a Debian arm distribution. ]]></content:encoded>
      <wp:post_date>2011-12-12 14:12:41</wp:post_date>
      <wp:post_date_gmt>2011-12-12 22:12:41</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>the-guruplug-server</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Deciding how to give hourly rates as a freelance web developer]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/38576392</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/38576392#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-38576392</guid>
      <pubDate>Tue, 13 Dec 2011 00:39:16 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>43</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->When I started to program it was for free. I then progressed into websites for 50 dollars. I would spend weeks just for 50 dollars. I then progressed into the thought of, hey I can do this at minimum wage ($7.50), its better then working at McDonald! Then it slowly moved up to $10 dollars. That really seemed like a sweet spot. I got a lot of work during that time, however a lot people never paid. Even worst was the hours where more then my estimates and basically I was really make $4 an hour. So I upped it to $15, I got better clients, who really paid, however much less work. At that point I stopped there. I finally moved onto a hourly paid job at a company and left my freelance work to rest.]]></content:encoded>
      <wp:post_date>2011-12-12 16:12:16</wp:post_date>
      <wp:post_date_gmt>2011-12-13 00:12:16</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>deciding-how-to-give-hourly-rates-as-a-freelance-web-developer</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Cheap $100 Android 2.3 Tablet McPad V7 / WoPad V7+]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/38617532</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/38617532#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-38617532</guid>
      <pubDate>Wed, 14 Dec 2011 07:55:01 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>44</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><iframe allowfullscreen="allowfullscreen" frameborder="0" height="381" scrolling="no" src="http://embed.myopera.com/video/?url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dtkd7phi2tQs&amp;height=375&amp;width=620" width="626" />
<br/>This is a written review of my video review of this tablet.<br/><br/><span style="font-size: 140%">First Impressions</span><br/><br/>It comes in a nice box, but it]]></content:encoded>
      <wp:post_date>2011-12-13 23:12:01</wp:post_date>
      <wp:post_date_gmt>2011-12-14 07:12:01</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>cheap-100-android-2-3-tablet-mcpad-v7-wopad-v7</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[My First iPhone Game Part#1]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/38718992</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/38718992#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-38718992</guid>
      <pubDate>Sat, 17 Dec 2011 09:57:39 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>45</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->I made a bold move from android to ios a few months back. Overall I am very happy with the move. I think the biggest win over is never having a phone that lags. Anyways I started game devlopment on an android device which had become overly complicated for no reason. This game was for my girlfriend and well, it went no where. So now we both have iPhones and it is no longer is possible to make her a game. I have always been a Linux and windows guy. So I did some searching for a way to make games for ios without an intel Mac OSX. I found dragonfire sdk, a way to make games on the iPhone on a windows machine with visual studio, c or c++.<br/><br/>Right now I&#39;ve only purchase the starter kit for the iPhone, mainly because I was unsure about the development. It took about 5 minutes to get started and it became appearnt that this was about the easiest game develment process I&#39;ve ever been apart of. The sdk has a very small set of functions it&#39;s like when I was learning quick basic. Even with the limited function set, it&#39;s just the right amount to do real work. However I am currently running into one major issue. When you add a graphic, view, text, button... How do you remove it? I tried deleting the pointer but that just segment faults the program. So for now the only work around I have to work with is to set the item to invisible and then reuse it later. So if I load up 3 views and then just need one, I hide those two. However if I now need 4 views, then I&#39;d grab the 2 empty ones and create one more view.<br/><br/>Anyways that&#39;s my development so far. I really do like the dragonfire sdk, so hopefully in the next post I can provide a better outlook on use of the sdk and provide a little bit information on the game I am working on.]]></content:encoded>
      <wp:post_date>2011-12-17 01:12:39</wp:post_date>
      <wp:post_date_gmt>2011-12-17 09:12:39</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>my-first-iphone-game-part-1</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[My First iPhone Game Part#2]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/38843082</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/38843082#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-38843082</guid>
      <pubDate>Wed, 21 Dec 2011 08:26:18 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>46</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/blog/Painting%20Title_005.png' /></span> So I started to draw some thoughts on controls. It would be nice to have the player just press and drag the character to where they want. This would act a lot like Google Map&#39;s little yellow man. I have always found it painful to implant controls on top of the game screen, because there is no physical indicator to tell your finger is not longer in the bound of the control, its hard to know until your character stops. Then your lost for a few seconds seeing what finger is doing the wrong thing. When in a stressful situation its so easy to have this happen promoting death and frustration to the end user. There is always the notion of walking in a game, but if your just dropping your character everywhere you lose that delay. I am expecting to implement that delay by the screen panning to the center of the character. While the screen is panning you&#39;ll lose the ability to move your character. I could also super impose a limited drop range. This could be effected by the weight of items in your bag, or special attributes like dexterity. It would also work in multi-player situations, as the the screen is panning the character would really be moving on the other player&#39;s screen. It would be interesting to see as this is a lot like chess. You&#39;d have to expect where the other opponent would be moving to, to cast your spell, shoot your bow, or run from.<br/><br/>I&#39;ve been messing with the DragonFire SDK a bit more and still pondering the question of how to manage views, images, text, etc when you don&#39;t need them other then making them invisible. I&#39;ve been busy wrapping the SDK into c++ classes. Their SDK is c based, so although you can use c++ with it, you&#39;re not in a very good position unless you do extra work like I am.<br/><br/>Here my c++ wrapper work on their SDK<br/><pre>Shabb::View v = Shabb::View(&quot;Ball.png&quot;);
v.getWidth();
v.setX(23);
v.setTouch(OnTouched);</pre><br/><br/>Here is the c code for the same functionality as above.<br/><pre>int v = ViewAdd(&quot;Ball.png&quot;, 0, 0);
int width = ViewGetWidth(v);
ViewSetxy(v, 23, ViewGety(v));
int TouchHandle = TouchAdd(0, 0, ViewGetWidth(v), ViewGetHeight(v), OnTouched, 0);
int ViewSetTouch(ViewHandle, TouchHandle); </pre> <br/><br/><span class='imgright'><img alt='' src='http://files.myopera.com/sutabi/blog/Painting%20Title_006.png' /></span> I&#39;ve also went ahead and upgraded to their Ultimate Iphone package since I&#39;ve been reading about bad experiences with the SDK. I&#39;ve been down this boat before (Titanium Mobile SDK) and so I would like to test on my device early before I complete the game and find out something I did, needs to be junked. It took a little over a day, to register my device (just like their website says). I used their contact form to email them and 3 days later no response. So I just emailed them directly and 10 minutes later I got a response. Their site states 6 hours, so overall that is a great response time. I did get a quick demo to compile on their server. I successfully installed it on my phone and overall excited to see it really worked. Again coming from Titanium Mobile SDK, setup is so easy and really just amazing. However the build process is very tedious. Once your ready to test on your device, you upload it to their server you get the file in about 10-20 seconds. Make sure you click and spam the &quot;Check Status&quot;, because refreshing the page will have you sitting there for hours. Once I got the demo running I started on my own game. I quickly found it crashing on my device and not the emulator. After 2 hours of zipping, uploading, unzipping, dragging, replacing and rerunning, I got it to not crash. It was over a stupid <strong>printf</strong> call. <br/><br/>Here is what I had:<br/><pre>
	std::map&lt;std::string, Shabb::View&gt;::iterator p;

	for(p = sviews.begin(); p != sviews.end(); p++) {
		std::string name = p-&gt;first;
		Shabb::View v = p-&gt;second;
		v.hide();
		printf(&quot;Deleting: %s\n&quot;, name);
	}
</pre><br/><br/>Here is the resulting code that worked:<br/><pre>
	std::map&lt;std::string, Shabb::View&gt;::iterator p;

	for(p = sviews.begin(); p != sviews.end(); p++) {
		std::string name = p-&gt;first;
		Shabb::View v = p-&gt;second;
		v.hide();
		printf(&quot;Deleting: %s\n&quot;, name.c_str());
	}
</pre><br/><br/>Now with the visual c++ compiler, the output of the printf resulted in funky characters. I thought nothing of it, just was a weird thing. Well turns out, it wasn&#39;t just a fluke, since it resulted in a crash on iOS. There is not a compile error, and I don&#39;t receive the log from the build system when completed. Overall this was about 2 hours of work, I felt like a real programmer, &quot;<a href="http://lwn.net/2000/0914/a/lt-debugger.php3" target="_blank">Real programmers don&#39;t use debuggers</a>&quot;. Obviously its not a fun process, hopefully I will become better at this and avoid stupid mistakes.<br/><br/>I would love to see their starter SDK free as I can see a huge up taking on this when it comes to making games even on the PC. Their SDK is lightweight, simple and so far is great. <br/><br/>Until Next Time,<br/>~ Joseph Montanez<br/>]]></content:encoded>
      <wp:post_date>2011-12-21 00:12:18</wp:post_date>
      <wp:post_date_gmt>2011-12-21 08:12:18</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>my-first-iphone-game-part-2</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Writing software that sucks.]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/39566112</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/39566112#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-39566112</guid>
      <pubDate>Mon, 2 Jan 2012 04:31:37 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>47</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->As a developer this is about the hardest moment in your life, your software sucks. Clients call in and you get stuck on the phone listening to them say &quot;I&#39;m sorry but xxxx sucks, it&#39;s unusable&quot;. Now I write software because I like a challenge, I am also well at writing code, but most of all because it makes people happy. So when I hear xxxx sucks, I take it to heart. I suck because I can&#39;t make xxxx better for them. Now this isn&#39;t software that&#39;s used by many, in fact the code I&#39;ve written was solely for their use and only their use. I would never get defensive with another, or at least I very hard not too. To be honest what they have to say is so important. It helps me understand them as a customer as well as a user. So the next time someone comes to me, I can then do a better job. However this whole &quot;sucks&quot; this is eating at me. Why can&#39;t I fix this? I can make them happy, right...? Then I hit a brick wall. I can&#39;t fix my software for them. Well first of all it&#39;s not my software, it&#39;s the company I work for. I can&#39;t spend all day making this sucking software work unsuckingly! I have x more projects to do with x more projects that are past due. So I am then stuck with a very unhappy client using sucky software. I am stuck with 7% of the code base sucking so bad it has the client emailing, and calling just to say how much this xxxx sucks.<br/><br/>Its really hard to make project decisions like this, mainly because fixing their software on company time isn&#39;t free.]]></content:encoded>
      <wp:post_date>2012-01-01 20:01:37</wp:post_date>
      <wp:post_date_gmt>2012-01-02 04:01:37</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>writing-software-that-sucks</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[My First iPhone Game Part#3]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/39733292</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/39733292#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-39733292</guid>
      <pubDate>Thu, 5 Jan 2012 07:50:13 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>48</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span class='imgright'><img alt='' src='http://files.myopera.com/sutabi/blog/sshot-1.png' /></span> So after a lot of procrastination I made some progress. I have basic scene logic, which is clearing up all resources and loading the resources needed for the next scene. A scene can be a game menu, or the game itself. As for finding out if it was possible to remove an image or view, its a big nope. Basically you&#39;ll have to reuse existing views you&#39;ve already created and for images, just swap them out. This is a big issue, but if you think about it, at least your application will not crash because your trying to access an image that is not in memory.<br/><br/><span style="font-size: 140%">The Map</span><br/><br/><span class='imgleft'><img alt='' src='http://files.myopera.com/sutabi/blog/photo.PNG' /></span> After that I moved onto the map, which presented a bit of an issue. DragonFire SDK does not let you write a c structure to file. In fact it must be a char*, array of characters. So whats the problem? Well let say I have a map 4x4, this will be represented with 16 characters to save to file. Now think, how many letters can you fit inside a single character? Well, if you guess it, then its one character! The max range of one character is 0 to 255 in a decimal format. Oh wait, it can&#39;t be that because its not unsigned char* your working with, its (signed) char*. So the max range is -128 to 127, which is still 255 possible types of tiles. The most logical step is to just convert the tile id from an integer to a char*. So an unsigned short, let say 15,000 is 2 bytes, which will end up being 5 chars hence 5 bytes. Congratulations you just limited yourself to 2.5x smaller the size of possible max map size! I am not very happy with that result. Sticking with 255 possible tiles is not a solution for me. I want more then 512, 1,024, 5,000, heck 32,767 possible tiles would be a perfect number right? So here are the steps I took to at least write the map to file.<br/><br/>First I get the tile id, and convert it to a string. However when you convert an integer to a string you don&#39;t have a fixed string size. This becomes an issue when you want to have simple logic to grab the first 3 numbers in the integer, and then the last 3 numbers. So for now after the number is converted I force a length of 6 bytes to overcome this.<br/><pre>//-- Convert tile id to a string
short numberLength = 0;
std::stringstream out;
out &lt;&lt; map[i];
tileString = out.str();

//-- This helps prevent an overflow of two chars
numberLength = tileString.length();

//-- If I don&#39;t resize to a fixed size, then substr will fall out of range
tileString.resize(6);</pre><br/><br/>The basics are, split the one number into two numbers and if the first number is greater then 255, then push the remainder onto the second number. This becomes an issue with numbers like 999, as it will fall over to the second number with a value of 744 which is greater then 255. So to get around this, I just have some basic logic, if the number is smaller then 5 digits, then just chop the number in 2 digits each rather then 3 digits each. Limiting the char to 2 digits for number smaller then 10,000 allows me to utilize the full range of numbers up to 32,767. It could go even higher, but 32,767 is a very decent number that I will not hit any time soon.<br/><pre>//-- Split the string number into two parts, so they each fit in a char

//-- Part One
int one, two, placeholder;
int start, stop;
placeholder = 0;
start = 0;
stop = 3;
if (numberLength &lt; 5) {
	start = 0;
	stop = 2;
}
if((std::istringstream (tileString.substr(start, stop).c_str()) &gt;&gt; one).fail()) {
	one = 0;
}

//-- If this number is too big then add the remainder to the placeholder
if (one &gt; 255) {
	placeholder = one - 255;
	one = 255;
}

//-- Part Two
start = 3;
stop = 3;
if (numberLength &lt; 5) {
	start = 2;
	stop = 2;
}
if((std::istringstream (tileString.substr(start, stop).c_str()) &gt;&gt; two).fail()) {
	two = 0;
}

//-- Apply any placeholder
two += placeholder;

//-- Save to map
mapStr[i * 2] = one - 128;
mapStr[(i * 2) + 1] = two - 128;</pre><br/><br/>Other then that, this concludes another part into my iphone game progress. I have not had any more force quits when running on my iphone after compile by the DragonFire SDK build server. Oh I did notice there are a few undocumented functions like FileDelete. I am still a happy with DragonFire and can&#39;t wait to finish my map loader and saver. I think the next post will be my map editor, which will most likely be browser based, which PHP code on the backend to pack the binary maps.<br/><br/>Still reading? Probably a good reason why. This is because you want to tell me on how wrong I am about being able to get a short integer to fit into 2 bytes, and still being able to decompress it. Well my friend you are right. I have no way to read back a tile id, if the value was shifted between two bytes. And it took me a day to sleep on it to even think about this. So here is the resulting code to resolve this issue. I ended up having to use one extra byte.<br/><br/><pre>//-- Convert tile id to a string
std::stringstream out;
out &lt;&lt; map[i];
tileString = out.str();

//-- If I don&#39;t resize to a fixed size, then substr will fall out of range
tileString.resize(6);

//-- Split the string number into trhee parts, so they each fit in a char
int digits[3];
for (int d = 0; d &lt; 3; d++) {
	if((std::istringstream (tileString.substr(d * 2, 2).c_str()) &gt;&gt; digits[d]).fail()) {
		digits[d] = -1;
	}
	
	//-- Save to map
	mapStr[(i * 3) + d] = digits[d];
}</pre><br/><br/>I instead need at least 3 chars, 3 bytes to compress a short into. Each byte will go up to 99, but no more, fitting perfectly into a single char, 3 times. This means I can have a max tile id of 999,999 tile ids. This much more then the 65,535 possible ids in a short, but again this will do. The resulting code is much more compact and well simple. This will make my maps 50% smaller then before but I still save 60% in memory compare to using one byte per number. <br/><br/>So the big question is how big of a map can I fit into memory before I need to read in a new map? Well as long as I keep the number of layers low, let say 5 layers. The first layer will be the ground tiles. The second layer will be decoration. The third layer will be characters / npc. The fourth layer will be walls and object the character will go behind and the last layer will be for clouds. I really don&#39;t need to describe the last layer in a map, this will be auto generated. So then, what will one map size be? Well let&#39;s try this: <br/><br/><pre>x = (256 tiles * 3 bytes) // The x will always hold the tile id.
y = 256 // the y stuff?
z = 4 // layers

x * y * z = 768 kilobytes of memory</pre>]]></content:encoded>
      <wp:post_date>2012-01-04 23:01:13</wp:post_date>
      <wp:post_date_gmt>2012-01-05 07:01:13</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>my-first-iphone-game-part-3</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Can iPhone 4s replace a point and shoot?]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/40091532</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/40091532#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-40091532</guid>
      <pubDate>Mon, 16 Jan 2012 10:15:42 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>49</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->I have a cheap Nikon l22 coolpix. I bought it for 110 at Walmart well over a year ago. It&#39;s biggest sell to me, was how fast you can take a picture. How fast can you capture that momment.  <br/><br/><span style="font-size: 140%">The Bad</span><br/>Well the iPhone matches camera startup time, but the point of capture depends on its last focus point. I also have to double press the home button twice and fine the camera icon then It fires up. All in all it takes longer to take a shot. Now given that you&#39;ll always have your phone and not a point and shoot camera makes this point moot.<br/><br/>Cheap point and shoot cameras are very bad at low light. However the iPhone 4s is much much worst, although its the best camera in a phone on the market. Without a larger sensor it will never be better. Now there are apps that help out, but the amount of noise (in low light) the iPhone 4s produces is very hard to work around.<br/><br/>There also the issue of focal length, macro photos are nice but even the cheapest camera have better focal length. They do a better job at blurring the background which may be very important depending on how bad the backdrop is.<br/><br/>Whats the next best thing other then focus? Well its zoom! The L22 has a 3.6 optical zoom, which means the same quality image at a closer shot. On top of the 3.6 optical zoom, it has 4x digital zoom, which is really crappy! Well the Iphone 4s is purely digital zoom. It becomes blurred, badly.<br/><br/><span style="font-size: 140%">The Good</span><br/>When taking a photo with the L22, the some movement means horrible blur. This is more apparent when there is less light to work with. This is true for a lot of cheap camera. The iPhone 4s does a much better at this. &quot;Shutter lag&quot; is very short.<br/><br/>Another great point on the iPhone 4s is color, hand down its just better. Reds are red and greens are greens. The L22 will have reds that look pink / purple, of course photoshop can fix this, however the less time you spend in photoshop the bigger the win it is.]]></content:encoded>
      <wp:post_date>2012-01-16 02:01:42</wp:post_date>
      <wp:post_date_gmt>2012-01-16 10:01:42</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>can-iphone-4s-replace-a-point-and-shoot</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[When to use Dojo, MooTools or jQuery]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/40843392</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/40843392#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-40843392</guid>
      <pubDate>Wed, 8 Feb 2012 21:28:10 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>50</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->This is not a war about which framework is the best. These are very mature and powerful libraries to use. This is also based on my experience and not my readings.<br/><br/>Dojo<br/><br/>Dojo&#39;s biggest strength is it&#39;s UI, Dijits. Both jQuery and Mootools lack a complete UI solution. Dojo also has a very organized modular system and while large, it can be fast. With its 1.7 release you can now load modules when needed and not when the browser is loading the entire page. It also has a very strong Mobile UI, being more mature and extensive then jQuery&#39;s Mobile. I feel that if you want a very enterprise level framework that&#39;s akin to ExtJS then this is probably your best bet.<br/><br/>jQuery<br/><br/>jQuery&#39;s roots are in quick results. An easy API that lets you traverse the DOM to get work done. It&#39;s biggest strength is it&#39;s community. I&#39;ve never taken a liking to jQuery, however it&#39;s UI is simple and get your projects moving fast. Another plus is it&#39;s documentation,  which is why many designers and entry level developers pickup jQuery.<br/><br/>Mootools<br/><br/>Mootools is focus on clean API and object oriented design much like traditional languages. While Dojo also has a class system, Mootools seems to shine when it comes to OOP. It&#39;s a much better library to keep your project in line for long term development. Mootool&#39;s UI is rather lacking since there is no offical UI for it. However just about every MooTools plugin is extraordinary flexible, if not, then written well. So making making changes to plugins are easy enough. One of the biggest complaints of MooTools is its issue with global scope. It attaches to to every element extending those objects&#39;s ability to be much greater. While I do like that feature it does make working with other libraries a little bit harder. There is a pure server edition which is a better option to pick if you only want the OOP aspect and tooling of MooTools without it&#39;s DOM aspects.]]></content:encoded>
      <wp:post_date>2012-02-08 13:02:10</wp:post_date>
      <wp:post_date_gmt>2012-02-08 21:02:10</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>when-to-use-dojo-mootools-or-jquery</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[How to get Ada AWS 2011 install on Windows 7]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/41909262</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/41909262#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-41909262</guid>
      <pubDate>Wed, 7 Mar 2012 17:25:41 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>51</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->1) Download untar / install GNAT 2011 &amp; AWS from <a href="http://libre.adacore.com/libre/download2" target="_blank">Libre Ada Core</a>. You wont be able to install AWS yet, but GNAT can be installed as it is an installer.<br/>2) Download and Install MinGW from <a href="http://sourceforge.net/projects/mingw/files/latest/download?source=files" target="_blank">MinGW on Sourceforge</a>.<br/>3) Run &quot;MinGW Shell&quot;, just search from the windows start menu, or go to &quot;All Programs&quot; -&gt; &quot;MinGW&quot; -&gt; &quot;MinGW Shell&quot;.<br/>4) Change the directory to the place where you had decompressed AWS source code. Example: <pre>cd &quot;C:\Users\joseph\Downloads\AdaCore\AWS\aws-gpl-2.10.0-src&quot;</pre><br/>5) Run <pre>make setup build install</pre><br/>6) This will install, however it will be broken. Locate aws_lib_shared.gpr, I found this file at &quot;<strong>C:\GNAT\2011\lib\gnat\aws\aws_lib_shared.gpr</strong>&quot;<br/>7) Edit the line <pre>LIBZ_Path := &quot;/c/GNAT/2011/bin/../lib/aws/native/static&quot;;</pre> to be <pre>LIBZ_Path := &quot;/GNAT/2011/bin/../lib/aws/native/static&quot;;</pre> Here is the final file:<br/><pre>project AWS_Lib_Shared is
   for Source_Files use ();
   type SSL_Library_Kind is (&quot;relocatable&quot;, &quot;static&quot;);
   SSL_Library_Type : SSL_Library_Kind := external (&quot;SSL_LIBRARY_TYPE&quot;, &quot;relocatable&quot;);
   LIB_Path := &quot;&quot;;
   S_SSL_Lib := &quot;&quot;;
   R_SSL_Lib := &quot;&quot;;
   S_CRY_Lib := &quot;&quot;;
   R_CRY_Lib := &quot;&quot;;
   S_TLS_Lib := &quot;&quot;;
   R_TLS_Lib := &quot;&quot;;
   S_GCR_Lib := &quot;&quot;;
   R_GCR_Lib := &quot;&quot;;
   --  libz
   LIBZ_Path := &quot;/GNAT/2011/bin/../lib/aws/native/static&quot;;
end AWS_Lib_Shared;</pre><br/>8) Compile the hello_world in &quot;aws-gpl-2.10.0-src\demos\hello_world&quot;. This can be done in the regular command prompt, you are not required to use MinGW shell at any point after you have completed step #7. To compile hello_world, just run &quot;gnatmake -p -Phello_world&quot;<br/><br/>Well, that&#39;s it for now. I had looked around and it seemed like there are much more complicated ways of doing this so I hope this is the easiest of them. Good luck on your next Ada AWS web server project!]]></content:encoded>
      <wp:post_date>2012-03-07 09:03:41</wp:post_date>
      <wp:post_date_gmt>2012-03-07 17:03:41</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>how-to-get-ada-aws-2011-install-on-windows-7</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[My thoughts on CFML and Jade]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/41963212</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/41963212#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-41963212</guid>
      <pubDate>Thu, 8 Mar 2012 17:09:20 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>52</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more--><span style="font-size: 140%">What is CFML?</span><br/>CFML or &quot;Cold Fusion Markup Language&quot; is just what it says. More importantly it is very mature and complete language to use for templating a website. Miva Merchant is another example of a mark up language that comes very close to CFML. Now CFML comes in a few flavors, as in what it takes to parse CFML files. Adobe has their own tools and there are free and open source tools like Railo. Using XML tags to transform markup is nothing new. There are even projects like XSLT which is a very complex beast.<br/><br/><span style="font-size: 140%">What is Jade?</span><br/>Jade is a very new template language used in the increasingly popular JavaScript language. There are even ports to other languages like PHP, Python and others. Jade is along the lines of programming in Python, which the exception that you can use pure html in your Jade template if you were too lazy to convert them to their Jade counter parts. In Jade there are no end tags, no curly brackets to tell when a element starts and stops. This is all laid out by tabs, just like in Python. Now in the world of Python, space is beautiful. Which makes Jade very appealing.<br/><br/><span style="font-size: 140%">What logic based templates matter!</span><br/>So why would I even remotely associate these two templating languages when they are anything but the same? Well my friend, prototyping in a template language will be your best friend towards rapid development. This is why PHP is used so much. In between some random strain of HTML you could have the most glorified logic even know to mankind. You were able to do that with out slapping your head against logic-less template engines. Both Jade and CFML can give you that world, as ugly, and wrong that decision may be.<br/><br/><strong>Examples!</strong><br/>So lets dive into some examples:<br/><strong>CFML</strong><br/><pre>&lt;cfif StructKeyExists(item, &quot;options&quot;)&gt;
    &lt;cfloop collection=&quot;#item.options#&quot; item=&quot;i&quot;&gt;
        &lt;cfset formItem=&quot;#item.options[i]#&quot; /&gt;
        &lt;cfif not StructKeyExists(formItem, &quot;type&quot;) or formItem.type eq &quot;select&quot;&gt;
            &lt;cfset hidden = StructKeyExists(formItem, &quot;depends&quot;) ? &quot;display: none&quot; : &quot;&quot; /&gt;
            &lt;label class=&quot;custom-select&quot; for=&quot;#formItem.name#&quot; style=&quot;#hidden#&quot;&gt;
                &lt;span class=&quot;custom-text&quot;&gt;#formItem.title#&lt;/span&gt;
                &lt;select id=&quot;#formItem.name#&quot; name=&quot;#formItem.name#&quot; required=&quot;#formItem.required#&quot;&gt;
                    &lt;option value=&quot;&quot;&gt; - Select One - &lt;/option&gt;
                &lt;/select&gt;
            &lt;/label&gt;
        &lt;/cfif&gt;
    &lt;/cfloop&gt;
&lt;/cfif&gt;</pre><br/><strong>Jade</strong><br/><pre>if item.options !== undefined
    each formItem, i in item.options
        if typeof formItem.type === &#39;undefined&#39; || typeof formItem.type === &#39;select&#39;
            label(class=&#39;custom-select&#39;, for=formItem.name, style=typeof formItem.depends !== &#39;undefined&#39; ? &#39;display: none&#39; : &#39;&#39;)
                span(class=&#39;custom-text&#39;) #{formItem.title}
                select(id=formItem.name, name=formItem.name, required=formItem.required)
                    option(selected, value=&#39;&#39;) - Select One -</pre><br/><br/>Now both of those are horrible examples, but the perfect examples at that. Data &quot;could&quot; be there or it could not. You&#39;re going to need to loop through the data at some point as well as set custom attributes to html elements. This is life in the world of templates. Also take note that you are not saving any indentation steps, at all. You may also notice that although Jade is more compact, it is highly unreadable. You really need to site there and scroll horizontally to even understand remotely what it is doing. Personally I like a very verbose language. It is one of the reasons I love Ada so much. You might save time in typing but you&#39;ll lose time in going back to maintain what you&#39;ve written.<br/>]]></content:encoded>
      <wp:post_date>2012-03-08 09:03:20</wp:post_date>
      <wp:post_date_gmt>2012-03-08 17:03:20</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>my-thoughts-on-cfml-and-jade</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Why choose Railo]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/42206102</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/42206102#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-42206102</guid>
      <pubDate>Sun, 18 Mar 2012 09:00:07 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>53</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->The past year and one half I had to deal with cold fusion. Everything I read about how horrible cold fusion was really was true. Everything was highly unorganized and source code formatting just wasn&#39;t working at all. Coming from PHP it was over all a big nightmare. On top of that reading XML as logic was very frustrating. During that time I had found Railo, to run a few things in CFML. <br/><br/>So now I have a new project, a shopping cart. I choose Node.JS as my platform, hoping I&#39;d get huge amount of speed from asynconous programming. Roll forward a few weeks later and its ugly points started to show. I had choosen Jade as my template language which generates JavaScript code out of their template (it&#39;s really fast). However to really make use of it&#39;s code generation it really needed to be cached. Caching the template amounted to many hours of work just to get it working. Most the time was spent finding decent logic to update the cache of a template. Seemed easy enough but reading a template was asynconous and then certain templates relied on other templates. So getting the needed templates recached, and in a synconous way proved to be a pain. Ever more so turning my code base into a pile of crap just dealing with caching and non-asynconous tasks (like scaling a lot of images, one at a time) when all I wanted to do was program the logic of my shopping cart.<br/><br/>So I took a step back and asked, what if someone else wanted to edit something on this website besides me? Could I still get the speed of Node.JS while making it easier to edit? I had jumped into Microsoft land with Web Matrix and started to really like the plateform. In a click of a button I could have a C# web project, not only running but hosted as well. However that quickly hit the crapper when Web Matrix crash. I re-installed, deleted started files and nothing good would come of it. So I tried to manually get the project running via command lines. I finally gave up, and for the reason that if you don&#39;t have the tools needed, then editing this site would be hard for anyone else.<br/><br/>That is when Railo poped back into my mind. As horrible of idea of Cold Fusion was there are many points Railo has that makes it designer and developer friendly. On top of that, using markup as a template language is already what HTML already does. So anyone working on HTML are already very close to Cold Fusion Markup Language. On top of that getting Railo to run, is a double click away (using jetty) and running on all major platforms! The bigger pluses come from its cache system, not just template cache, but any cache you want. It can hook into memcache and you&#39;d never need to change your cache code. However the most important part was being able to escape CFML for the end all of logic. All complicated non-markup logic can be done in CFScript, which is very much like javascript (another big plus), but it could also be done in Java. However there is a even more, because everything is running under Java in the first place you can now use languages that run on the JVM, like Jython (Python), JRuby (Ruby), Rhino (JavaScript), etc. Instead of &lt;cfscript&gt; it could be &lt;cfjython&gt;... So why not use an blazing fast template language (Cold Fusion ermm Railo) that has proven itself for many year. Why not use something that can scale, be open source and make it easier for designers?<br/><br/>I am not here to sell you Railo, after all its free. This does bring me back to why I had the many negative views on Cold Fusion. Those views were really about the developer using the tool. Much like when you work on a PHP project that was outsourced and resulted in pile of crap. Use the tools wisely and issue like this won&#39;t happen. I think Cold Fusion, as much of a dying language it may be, have a perfect role in Web Development. It&#39;s just sad to see projects like the I had to work with for a year and 1/2 to make me think its unsuitable. So for my next project and any project after I am choose Railo over Php, over Node.JS, or Python and Ada when it comes to web development and really for the most important reason, ease of introduction and productivity.<br/><br/>If you want to take anything away from this blog post, it is that Railo is a very productive platform to work on. It may not be as fast as NodeJS but not having to be stuck in an async model is worth some speed lose. In reality if you really want a fast site, then cache is important, as well as a great programmatic design. If you are able to do that then the same speed you&#39;ll receive in NodeJS are the same if not faster in Ralio.]]></content:encoded>
      <wp:post_date>2012-03-18 02:03:07</wp:post_date>
      <wp:post_date_gmt>2012-03-18 09:03:07</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>why-choose-railo</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Immutability in Ada]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/43951942</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/43951942#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-43951942</guid>
      <pubDate>Sat, 31 Mar 2012 17:29:28 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>54</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Immutability is important for safe applications. It&#39;s not the only aspect you can use to make your applications safer, but its by far the biggest step in the right direction. Just remember that safety comes at both a cost in time and performance. Languages like Haskell, Scala and Erlang assume everything is immutable, which is why they are highly regarded as great languages to use when coming across issues like concurrency, and overall scalability. Scaling your application in performance and code base create maintance issues. These issues result in using safeguards like mutexes, unless you can have a better way to get around every changing data.<br/><br/><span style="font-size: 140%">What is Immutability?</span><br/>So first let&#39;s take a step back and understand what an immutable variable is. If you ever used constants in a programming language, that is a form of immutability. It is a variable that will never change. On the other hand a mutable variable can change at any time.<br/><br/><span style="font-size: 140%">What is Wrong with Mutability?</span><br/>What isn&#39;t broken should not be fixed, or at least that is how it works in practice, just not when it comes to programming. If you can&#39;t change your source code, because you are scared to break it, then you have developed the application wrong. You may never need to worry about this at all, it&#39;s because most of the time you can get away with mutability. However if you are working on a multi-process, multi-threaded, or even multi-core application, how and what is changes becomes harder to resolve. Solutions like the use of a mutex, will prevent and control variables with some sort of guarantee that is value has not changed while you are accesssing it. But what if you forgot to unlock it, or even worst, you are having it locked for too long and then what was suppose to be faster, is much slower. Overall it becomes harder to maintain your application as it grows in code base. So a very tested idea, with proven results, is too stop using mutability in this context. <br/><br/><span style="font-size: 140%">How Immutability Makes You Smarter</span><br/>First, when being forced to only use an immutable variable you really have to throw away a LOT of what you&#39;ve learn. To be honest, it wasn&#39;t Haskell&#39;s functional syntax that got me confused, rather the fact I could not change anything in my application. You start to fight with how you are expecting the code to look like, when in reality you just need to think different. Long functions with if statements, loops, and etc begin to really get in your way. The crux of the problems stem from using immutability. Even worst is when you want to use objects, then you&#39;re really thrown into the deep end there. After a while you start to break what would be lines of logic, into a line of function calls, if you don&#39;t you&#39;d lose your mind. A side effect of having a bunch of functions is scalability. Most of the time you have to break your complicated logic into smaller parts to be process and not everything can be parallelize onto multiple cores, or processes. However you are forced break your logic down in the first place, so your ability to scale later on will be easier on you. Another side effect of breaking your application up into such small operation is the use of GC, garbage collection. There is very little need for it, as the scope required for your application&#39;s life becomes smaller, again due to breaking everything up into smaller functions.]]></content:encoded>
      <wp:post_date>2012-03-31 10:03:28</wp:post_date>
      <wp:post_date_gmt>2012-03-31 17:03:28</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>immutability-in-ada</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Is Open Source worth it? Proprietary to the rescue!]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/48401452</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/48401452#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-48401452</guid>
      <pubDate>Thu, 17 May 2012 08:38:24 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>55</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->I work for a company that gives the source code of the project, to their clients. The client can do whatever they want with it*, yet the company is still labeled as proprietary. The ONLY reason it falls under that is because the customer cannot resell the application. It is not locked to a server, or core, or even anything else other then the client cannot mass sell the software that was built. They can sell the company and the software can be sold with it, but that&#39;s it. Every day there is a fight over open source and the company. Yes we use open source software, yes we give you the source, yes you can go hire anyone you want to work on the source code and yes the company will be there in case anything goes wrong.<br/><br/>Now what I see over and over and over again are client picking open source solutions and thinking it was the right choice. The reason the client chooses open source software are to have proven solutions, to have a community to fall back on and to have a developer base to pull from. However what will happen is the client will choose the open source software, get the work done they need and leave the solution alone. This is where problems start to happen.<br/><br/>If you leave any software alone for 5 years things start to happen. You grow as a company, your needs change and then that same community, that same developer pool to pick from will fade. So your only solution is to find someone to work on your project and the thoughtful cost saving times quickly catch up to you. Now if you had decided to stay up to date, then those plugins start to rot, the parts that made the software useful. As the software progresses, the community moves as well. Your interface changes and you quickly realize that this perfect work of open source software isn&#39;t ... perfect. In fact there are a lot of hidden costs you do pay, mainly in time.<br/><br/>The cost of your project, is only the beginning. If you put $30,000 into your application then expect $30,000 more in maintenance, updates and hosting expenses in the next few years. Many clients shoot their money like a shotgun when it comes to software. This is a big mistake as they should be investing their money as a steady stream of water. What you think customers want, and what you think sells, will come to haunt you. You need to be able to accept change, be flexible and if your software isn&#39;t able to change or be flexible as you are, then you&#39;re going to run into a brick wall. The concept of open source vs proprietary doesn&#39;t even matter, if you have to go through hell to make a simple change then that solution was a bad choice. No one, not even myself can make the right choice for you, but I can leave you with this advice. <br/><br/>Everything you think you need is really unneeded. Process defeats and over comes software limitations. Spend that money in other areas to help your business, design, marketing, new hires. You&#39;d be amazed at where you could be and how fast you can move if you think simple.]]></content:encoded>
      <wp:post_date>2012-05-17 01:05:24</wp:post_date>
      <wp:post_date_gmt>2012-05-17 08:05:24</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>is-open-source-worth-it-proprietary-to-the-rescue</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Microsoft WebMatrix is where new developers should start.]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/41532882</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/41532882#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-41532882</guid>
      <pubDate>Sat, 9 Jun 2012 08:43:00 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>56</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->In the world of LAMP (Linux, Apache, MySQL, and PHP) it&#39;s easy to lose touch of the alternatives. You can become so obsessed on &quot;free&quot; and &quot;open source&quot;, that in the end you forget why you even use the stack. Back when I started using PHP, the alternatives just made no sense. I was just learning, so paying for IIS, Visual Studio, and MSSQL made no sense. I would rather spend hours trying to get a free web server running. It was far easier then a Java based solution, and just overall easier to get started.<br/><br/>Now roll forward, oh lets say 8+ years and those Microsoft tools are now free. Even better, they just work. The next biggest hurdle is hosting and how the heck you get it to even run on that. Well say hello to Microsoft WebMatrix. I signed up for a $2.00 USD monthly hosting service. The hosting supported ASP.Net 4.0 and PHP 5.3, which is an amazing steal. Instantly I got an email with the attached WebMatrix configuration file. I then clicked the publish button, provided the attached settings file and seconds later I have a full ASP 4.0 website with MSSQL 2008... I didn&#39;t have to enter any passwords, weird URLS, nothing, the configuration file had it all. Not bad for $2.00 a month of hosting!<br/><br/>The text editor in WebMatrix is really not that great but its enough to get real work done. The tooling behind ASP.Net versus Php is superior. Yes there is Zend Studio / Zend Server, but that isn&#39;t free and it doesn&#39;t have a repository system to add on libraries, applications and extensions. Cpanel comes close, but that&#39;s not free, nor is it as friendly. Now that&#39;s not to say you can&#39;t use PHP on this platform. In fact you can! It comes with a fairly recent version of PHP ready to go! Microsoft has gone through great lengths to capture the free world by supporting PHP and features wordpress as an installation. A little nugget on why they do this is to let you know they have a special patch for SQL Server, so wordpress without MySQL. Microsoft does have an end goal, IIS and SQL Server using Azure, their cloud system. Why else support node, and php, and maybe even more?<br/><br/>So although I highly recommend WebMatrix, it does come with a cost. You have to invest at some point. Shared hosting is dirt cheap, writing scalable software will take some money, it is still not as affordable as linux based cloud systems. However in the end you stand on the shoulders of a giant, Microsoft. To be honest I think the trade off is fair, as it is not different then going with Enterprise Editions of Red Hat / Ubuntu.<br/><br/>Now I didn&#39;t really want to make this a Php versus Asp.Net discussion, however I think I&#39;ve gotten my point across that a lot has changed, the stack Microsoft offers is very well done and I would recommend it if you intend to build strong software. There is another point to be made. Asp.Net has also come a great way. The webmatrix IDE gives you a sample  Asp.Net login site, it offers an easy to understand login, yet secure. They use some great technologies to make development easier to secure. Even better with &quot;Web Pages&quot; you can get back to ASP classic days or Php, making it easier for new comers and old comers to learn, and maybe later on move to MVC.]]></content:encoded>
      <wp:post_date>2012-06-09 01:06:00</wp:post_date>
      <wp:post_date_gmt>2012-06-09 08:06:00</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>web-matrix-is-how-developers-should-start</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Asp.Net on Ubuntu 12.04]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/49826022</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/49826022#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-49826022</guid>
      <pubDate>Wed, 13 Jun 2012 20:25:41 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>57</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->As a fair warning this in no way means you can run you Asp.net Applications on Mono without issues. In fact if your using SQL Server getting your data to another database will be no easy feat. <br/><br/><span style="font-size: 140%">Install Mono + XSP 4.0</span><br/><pre>apt-get install mono-xsp4 mono-xsp4-base asp.net-examples</pre><br/><br/><span style="font-size: 140%">Copy Sample</span><br/><pre>mkdir ~/Documents/my-a sp-site
cp -R /usr/share/asp.net-demos ~/Documents/my-asp-site</pre><br/><br/><span style="font-size: 140%">Install Postgres + Postgres Admin</span><br/><pre>sudo apt-get install postgresql pgadmin3
sudo -u postgres psql template1
\password postgres</pre>]]></content:encoded>
      <wp:post_date>2012-06-13 13:06:41</wp:post_date>
      <wp:post_date_gmt>2012-06-13 20:06:41</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>asp-net-on-ubuntu-12-04</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Picking the right Web Development Plateform]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/49838102</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/49838102#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-49838102</guid>
      <pubDate>Thu, 14 Jun 2012 07:05:58 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>58</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->There are a lot of decisions to be made when picking the right development platform. As a business owner, your ability to pick the right choice will be impossible.<br/><br/><span style="font-size: 160%">Performance</span><br/><br/><span style="font-size: 140%">Lines of Code</span><br/><br/>Its hard to estimate how many lines of code a product will take. But the language you choose will greatly effect the bottom line of performance. Products like Magneto which have millions lines of code have devastating effect on performance in a language like PHP. There is software to help, like HipHop and APC, but your millage will always be effected by this. This really is because if you have a request that takes 100 source files in PHP, it has to spend time reading them all. APC will merge into one file, saving a lot of time. HipHop comiles PHP into C++ which has proven to have 30% increase in performance. The same is true for Python (Shedskin, PYPY, Jython), Ruby and others. There is always defacto compiler / interpreter for a language but there are also others out there which are design with speed in mind. There is also a very large debate on JIT (Just in Time) vs Bytecode interpretation vs Native Machine Code. Each of those aspects have effects. Native Machine Code will always run faster, like in C++, C, etc. However the time it takes to compile it into machive code could take a long time. So you trade off speed of development with speed of execution. JIT is a stop gap allowing you to get relatively fast development (there still would be compile time) with decent run speed. And then Bytecode interpretation is alongside of JIT but development time is much slower. Lastly there is just language interpretation which allows very fast development, but slow run times. Languages like Haskel]]></content:encoded>
      <wp:post_date>2012-06-14 00:06:58</wp:post_date>
      <wp:post_date_gmt>2012-06-14 07:06:58</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>picking-the-right-web-development-plateform</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Parsing a date string in Vala]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/51273322</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/51273322#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-51273322</guid>
      <pubDate>Wed, 25 Jul 2012 07:52:51 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>59</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Vala&#39;s date and time is based off glib which is not the greatest interface to date and time functionality. There are two primary functions you will need to know, Date.set_parse and Date.strftime. After you parse a date you will need to know if it was correctly parsed, this will require the call of Date.valid. Now the part that is more painful is getting out a formatted date. Date.strftime requires you to create a char[] variable that will have the correct length needed to receive the formatted string. Once the variable is created, you will then pass it into the function. Normally I will create a char array much larger then needed and call string.chomp to trim the left over whitespace.<br/><br/><span style="font-size: 140%">Code Sample of Parsing a Date</span><br/><script src="https://gist.github.com/3174992.js"></script>]]></content:encoded>
      <wp:post_date>2012-07-25 00:07:51</wp:post_date>
      <wp:post_date_gmt>2012-07-25 07:07:51</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>parsing-a-date-string-in-vala</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Site is Moving Soon!]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/53844502</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/53844502#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-53844502</guid>
      <pubDate>Fri, 5 Oct 2012 09:54:29 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>60</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->From Sutabi.tk to Gorilla3d.com, and then to &quot;Sutabi&quot; My Opera, I am doing yet another move. My Opera has been great to me however it is lacking tools I need to continue. Moving from a website I completely control to a managed blog has been hard. I do enjoy technical writing but there are other things important to me, like displaying my work. Another important part which use to be here were web stats I could see who was reading my content. All I get right now is &quot;You have 10071 visits&quot;. Okay... in what time? To what pages?<br/><br/>It feels like I am writing to in a dark room, no one would ever read my stuff.]]></content:encoded>
      <wp:post_date>2012-10-05 02:10:29</wp:post_date>
      <wp:post_date_gmt>2012-10-05 09:10:29</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>site-is-moving-soon</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Redis, Riak, NodeJS, Vert.x, and NoSQL / Event Loops]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/58777022</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/58777022#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-58777022</guid>
      <pubDate>Mon, 11 Feb 2013 06:59:13 GMT</pubDate>
      
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>61</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Long title, I know, but for good reasoning. There are technologies out there today that can help your software scale, be faster and maybe even make your development time shorter. However with the tons of hype behind these products the temptation to use these as an all or nothing solution is not always the right choice.<br/><br/>NoSql - Key / Value Store, Big Data, Document Storage<br/><br/>Traditional Relational Databases such as MySQL, Postgres, MS SQL, and other all share one major trait, ACID. When you save data in that database, it will promise you, that it is on disk. It will also let you transact blocks of operations for atomic concurrency, given you the power of undo. But most of all if the server goes down, your data is still there and waiting to come back. Now enter NoSQL, and the reason why you will see so many positive benchmarks.<br/><br/>NoSQL Speed<br/><br/>You lose features to gain speed. Let say for example you are running a shopping cart, and you want it faster... Well can you afford to lose your customer data? Can you afford to lose an order, maybe 10? If the answer is no, then your speed gain will not be by much. The reason many of these NoSQL databases are fast is because they work in memory, and saved customer data will live in memory until it is written to disk which could never happen, or happen every few seconds. It really depends on the database. For example Redis will let you have 3 options, write to disk on every operation, write to disk ever x seconds, or write to disk when the OS feels like writing to disk. I&#39;ll let you guess as to which is faster.<br/><br/>NoSQL Scale<br/><br/>With great power comes great responsibility, and this is true for relational databases. So the question is how do you scale a database, and the answer is remove relational powers. Those lovely &quot;joins&quot;, are out the window as the cost are too high to maintain. However you run into a bigger problem, if you have billions of records, then the likeliness of it fitting perfectly on one server is very little. You only have one option, sharding, a practice many feel is the wrong idea. Imagine you have a table split  across 20 servers, and the most active data is a second thought. So 1-2 servers are always overloaded and the rest are sitting around doing nothing... You&#39;d need to redistribute the data across the servers in order of load, unless you have parts of the same data across multiple servers. Solutions like Redis cluster really doesn&#39;t address this, rather its the regular master / slave setup. Meaning all your doing is copying all data to other servers. So the idea of sharding and sharing the part of the same data across multiple servers is left to the programmers and the applications they build. This is were Riak shines, you get automatic even distribution based on the number of servers you have. There is no &quot;master&quot; or &quot;slaves&quot;, which seems like a miracle, right? Every blessing has it&#39;s cost. Remember talking about losing data? Well imagine writing to your 20 servers, that is a very slow process if you want to promise your data is on all of them. Well with Riak you have the option to decide on how many servers its written too before you &quot;trust&quot; the data safe, and concurrent enough to query from. Lower numbers mean blazing fast write speeds. There are even databases that will return a write confirmation without even reaching the server.<br/><br/>Event Loops<br/><br/>With NodeJS taking on the role of promising better connection capacity it becomes very lucrative to want to use this platform. There is an inherit problem with building your entire application in an event loop, meaning you cannot have any blocking operations. A blocking operation is not just waiting around, but anything cpu intensive. For example calculating pi, while not IO bound, is still a blocking operation. Event loops normally run a single thread, meaning a single core, so even greater issues surface. For example if you want to utilized all cores on a CPU, you can use node cluster, but you lose the ability to share data between them. Sure there are solutions like ZeroMQ to do message passing, but it&#39;s another layer of obstruction, with a increased execution delay. Vert.X aims to solve some of the pains of NodeJS with some success, your application is automatically deployed on all cores. You can share data between all &quot;verticals&quot;, but using shared maps and shared sets. Even using shared data you are still limited to immutable data. Immutable data is data that does not change over time. That doesn&#39;t mean the entire map or set can never change, but the key / element data has to be completely replaced when updating. There is still a problem, everything cannot be asynchronous. For example old logic that the cost to reprogram is not justifiable, or you lose a lot of performance by making a calculation asynchronous. The NodeJS solution is to deploy another process, via web server to only do blocking operations and use http to connect, or rely on a message system, like ZeroMQ or Gearman. Vert.x&#39;s solution is called a &quot;worker&quot;, designed for blocking operations, allowing you to deploy you application and scale vertically with little issue, compared to NodeJS which is best for horizontal scaling. Vertical scaling is the ability to consume all resources on a single computer, if you need to scale you just continue to purchase more CPUS, RAM or Disk space. Horizontal scaling is the ability to work on multiple computers. So it is ideal to have a platform that can scale vertical and horizontal. So while Vert.x provides a great vertical scaling solution, it does allow you to build horizontal systems, which is the same amount of work in NodeJS. The problem with Vert.x is the packages available to do none blocking operations is small compared to NodeJS. In fact if you wanted to perform an async database call to MySQL, you are out of luck. You&#39;d need to create a worker to handle all database calls. The reason is because Vert.X runs on the JVM, so all Java libraries are accessible and almost none of them are asynchronous. So the reason MySQL calls require a &quot;worker&quot; is because JDBC is a blocking library. <br/><br/>What To Take Away<br/><br/>Just understand that while these technologies are amazing, they are best used for their specific operations. Using an all or nothing solution is the worst direction you can take. Take a step back and think about the language you use. Do you think every library you use was written in the same language? Chances are it may had been written in C, or if its a share library could have been written in any other language. So remember, use the right tool for the right job and with great power comes great responsibility.]]></content:encoded>
      <wp:post_date>2013-02-10 22:02:13</wp:post_date>
      <wp:post_date_gmt>2013-02-11 06:02:13</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>redis-riak-nodejs-vert-x-and-nosql-event-loops</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Getting Haskell Snap install on Windows with Haskell Platform 2013.2.0.0]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/83592922</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/83592922#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-83592922</guid>
      <pubDate>Tue, 13 Aug 2013 04:14:02 GMT</pubDate>
      <category domain="tag" nicename="web-development"><![CDATA[Web Development]]></category><category domain="tag" nicename="programming"><![CDATA[programming]]></category><category domain="tag" nicename="haskell"><![CDATA[haskell]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>62</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Chances are if you ran this command in your command prompt:<br/><br/><pre>&gt; cabal install snap</pre><br/><br/>Then it probably resulted in this error!<br/><br/><pre>
cabal: Error: some packages failed to install:
cipher-aes-0.2.0 failed during the building phase. The exception was:
ExitFailure 1
clientsession-0.9 depends on cipher-aes-0.2.0 which failed to install.
cprng-aes-0.3.2 depends on cipher-aes-0.2.0 which failed to install.
cryptocipher-0.5.0 depends on cipher-aes-0.2.0 which failed to install.
snap-0.12.1 depends on cipher-aes-0.2.0 which failed to install.</pre><br/><br/>Well the reason is cipher aes is not picked correctly when you are also installing cprng-aes, so you just need to set the flag for the package.<br/><br/><pre>&gt; cabal install -f -fastaes cprng-aes</pre><br/><br/>After that, just install snap once more and you will be on your mary way!<br/><br/><pre>&gt; cabal install snap
Registering snap-0.12.1...
Installed snap-0.12.1
</pre><br/><br/>Good luck on your next Snap web application!]]></content:encoded>
      <wp:post_date>2013-08-12 21:08:02</wp:post_date>
      <wp:post_date_gmt>2013-08-13 04:08:02</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>getting-haskell-snap-install-on-windows-with-haskell-platform-2013-2-0-0</wp:post_name>
      <wp:status>publish</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
    <item>
      <title><![CDATA[Functional Programming in PHP]]></title>
      <link>http://my.opera.com/sutabi/blog/show.dml/83632282</link>
      <comments>http://my.opera.com/sutabi/blog/show.dml/83632282#comments</comments>
      <dc:creator>sutabi</dc:creator>
      <guid isPermaLink="false">urn:myopera-sutabi-blog-83632282</guid>
      <pubDate>Tue, 13 Aug 2013 06:02:26 GMT</pubDate>
      <category domain="tag" nicename="PRIVATE"><![CDATA[PRIVATE]]></category>
      <description><![CDATA[]]></description>
      <wp:post_type>post</wp:post_type>
      <wp:post_id>63</wp:post_id>
      <content:encoded><![CDATA[<p></p><!--more-->Functional programming is rather easy concept to understand, however there is much reasoning as to why certainly languages are chosen when trying to enforce functional programming. So I shall do my best to explain the basic concepts of functional programming in PHP as well as other language they are better suited for the learning experience.<br/><br/>]]></content:encoded>
      <wp:post_date>2013-08-12 23:08:26</wp:post_date>
      <wp:post_date_gmt>2013-08-13 06:08:26</wp:post_date_gmt>
      <wp:comment_status>open</wp:comment_status>
      <wp:post_name>functional-programming-in-php</wp:post_name>
      <wp:status>private</wp:status>
      <wp:is_sticky>0</wp:is_sticky>

    </item>
  </channel>
</rss>

